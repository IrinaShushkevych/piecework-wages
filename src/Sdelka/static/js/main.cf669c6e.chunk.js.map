{"version":3,"sources":["API/apiuser.js","Redux/loguserreducer.js","Component/Login/logincontainer.jsx","Component/MainBody/mainmenu.jsx","API/apidovidnuk.js","Redux/dovidnukreducer.js","Component/DataDovidnuk/dovidnukmenu.jsx","Component/DataDovidnuk/dovidnukselections.jsx","Component/DataDovidnuk/tablebody.jsx","Component/Modal/modalform.jsx","Component/DataDovidnuk/tables.jsx","Component/DataDovidnuk/dovidnukcontainer.jsx","Component/MainBody/maincontainer.jsx","App.js","Redux/mainreducer.js","Redux/reduxstore.js","appmain.js","index.js"],"names":["instance","axios","baseURL","userAPI","ul","up","get","id","initialState","userLogin","userPassword","userName","userId","userAccess","userRoles","selectMainMenu","setConnect","log","pas","dispatch","then","response","data","alert","uid","uname","name_user","uroles","type","logname","password","userid","name","roles","setConnectAction","logUserReducer","state","action","window","sessionStorage","setItem","userSelectMenu","comp","LoginContainer","login","props","onLoginChange","e","setState","currentTarget","value","onPasswordChange","connectedUser","prevProps","prevState","this","className","placeholder","onChange","onClick","React","Component","connect","loguser","MainMenus","DisconectingUser","MainMenu","map","a","key","code_dov","to","component","name_dovid","removeItem","dovidnukAPI","dovid","id_dov","dataf","id_row","JSON","stringify","defaults","headers","post","userroles","datafields","id_but","SETDOV","SELECTCOND","DOVBUTTON","USERSELECTCOND","SELDOVROW","EDITROW","SELBUT","selectDov","selectDovRow","is_view_table","dataDovidnuk","dataSelectionConditions","selectedDataSelectionConditions","dovButtons","tableHeader","tableData","refId","refCode","refType","refFileResult","refHeader","refData","isModal","setUserSelectConditions","index","indexdata","dataindex","setTableHeader","tableheader","setTableData","tabledatas","setSelectButton","refcode","reftype","refheader","refdata","refid","ismodal","refresult","ref_code","ref_type","ref_header","ref_data","ref_id","is_modal","ref_result","dovidnukReducer","arrdov","selcondarr","butt","row","indexrow","datarow","DovidnukMenu","DataDovidnuk","selectDovidnuk","SecMenu","code_dovid","DovidnukSelections","selectedData","selectdov","selectSelectionConditions","DovSel","field_caption","data-key","table_user_select","target","getAttribute","data_select","b","indexb","field_user_id","field_user_view","length","TableRow","selectRow","i","arr","d","tablerow","setEditRow","deleteValue","clickButton","unsaveEditValue","str","str1","setEditValue","dovbutton","data-id","but","onDoubleClick","setSelectRow","colSpan","saveEditValue","deleteEditValue","ModalForm","values","val","closeModalForms","console","setValues","saveValue","closeModal","Tables","selectdovrow","deleteRow","TableHeaderButton","in_row","TableHeader","name_col","TableBody","TableAddRow","TableButon","DB","id_dovidnuk","name_button","ModalForms","DovidnukContainer","getDovidnuku","dov_id","getItem","dovidnuk","setTable","buttonClick","textresult","selcond","response1","iddov","idrow","MainContainer","setDisconect","exact","path","render","App","pass","SelectMainMenu","mainReducer","paths","reducers","combineReducers","main","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","AppMain","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf669c6e.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'http://sdelka/php/'\r\n//\twithCredentials : true \r\n});\r\n\r\nexport const userAPI = {\r\n\tgetUsers : (ul, up) => { return instance.get('user_connect.php?userlogin='+ul+'&userpassword='+up) },\r\n\t\r\n\tgetUserRoles : (id) => { return instance.get('user_role.php?userid='+id)}\r\n}","import {userAPI} from './../API/apiuser';\r\n\r\nconst LOGIN = 'login';\r\nconst LOGOUT = 'logout';\r\nconst SETMENU = 'set_menu';\r\n\r\nlet initialState = {\r\n        userLogin : '',\r\n        userPassword : '',\r\n        userName : '',\r\n        userId : 0,\r\n        userAccess : 0,\r\n        userRoles :null,\r\n        selectMainMenu : []\r\n    }\r\n\r\nlet logUserReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOGIN : \r\n            window.sessionStorage.setItem('login', action.logname);\r\n            window.sessionStorage.setItem('password', action.password);\r\n            return  {\r\n                ...state, \r\n                userLogin : action.logname,\r\n                userPassword : action.password,\r\n                userId : action.userid,\r\n                userName : action.name,\r\n                ...state.selectMainMenu,\r\n                selectMainMenu : action.roles\r\n            }\r\n        case LOGOUT : \r\n            return {\r\n                ...state, \r\n                userPassword : '',\r\n                userId : 0\r\n            }\r\n        case SETMENU :\r\n            return {\r\n                ...state,\r\n                userSelectMenu : action.comp\r\n            }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport const setConnectAction = (log, pas, id, name_user, uroles) => ({type : LOGIN, logname : log, password: pas, userid: id, name: name_user, roles: uroles});\r\nexport const setDisconnectAction = () => ({type : LOGOUT});\r\nexport const setSelectMenu = (comp) => ({type : SETMENU, component: comp});\r\n\r\nexport const setConnect = (log,pas) => (dispatch) => { \r\n    userAPI.getUsers(log, pas).then((response) => {\r\n        if (response.data['resultCode'] === 1) {\r\n            alert(response.data['value']);\r\n        } else {\r\n            let uid = response.data['value'][0]['id'];\r\n            let uname = response.data['value'][0]['name_user'];\r\n            userAPI.getUserRoles(uid).then((response) => {\r\n                dispatch(setConnectAction( log, pas, uid, uname, response.data ));\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const setDisconect = () => (dispatch) => {\r\n    dispatch(setDisconnectAction())\r\n}\r\n\r\nexport default logUserReducer;","import React from 'react';\r\nimport {setConnect} from './../../Redux/loguserreducer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass LoginContainer extends React.Component {\r\n    \r\n    state = {\r\n        login : this.props.userLogin, \r\n        password: this.props.userPassword\r\n    };\r\n\r\n    onLoginChange = (e) => { this.setState( { login : e.currentTarget.value } ) }\r\n\r\n    onPasswordChange = (e) => { this.setState({password: e.currentTarget.value}) }\r\n    \r\n    connectedUser = () => { this.props.setConnect(this.state.login, this.state.password) }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.userPassword !== this.props.userPassword) this.setState({password : this.props.userPassword})\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userId === 0) {\r\n        return (\r\n            <div className='sdelkamain'>\r\n                <input type=\"text\" \r\n                        placeholder=\"Enter your login\" \r\n                        value={ this.state.login } \r\n                        onChange={ this.onLoginChange }\r\n                        >\r\n                </input>\r\n                <input type=\"text\" \r\n                        placeholder=\"Enter your password\" \r\n                        value={ this.state.password }\r\n                        onChange={ this.onPasswordChange } \r\n                        >\r\n                </input>\r\n                    <button onClick={ this.connectedUser }>\r\n                            Вхід\r\n                    </button>\r\n            </div>\r\n        )}\r\n        else return null\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userLogin : state.loguser.userLogin,\r\n        userPassword : state.loguser.userPassword,\r\n        userId : state.loguser.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setConnect })(LoginContainer);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet MainMenus = ({ userId, selectMainMenu,  DisconectingUser}) => {\r\n    \r\n    let MainMenu = selectMainMenu.map((a) => {\r\n        return ( \r\n            <NavLink key={a.code_dov}  className='dovbutton' to={'/'+a.component} onClick = {() => window.sessionStorage.setItem('maincomp', '/'+a.component)}>\r\n                <span>    \r\n                    {a.name_dovid}\r\n                </span>\r\n            </NavLink> \r\n            )\r\n    });\r\n    \r\n    if (userId === 0) {\r\n        return null\r\n    } else {\r\n        return(\r\n            <div className='wraper'>\r\n                <div className='navdiv'>\r\n                    <div className='ribbon'>\r\n                        {MainMenu}\r\n                        <NavLink className='dovbutton' to={'/'} onClick={() => {\r\n                                                                        window.sessionStorage.removeItem('password'); \r\n                                                                        DisconectingUser()}}>\r\n                            <span> Вихід </span>\r\n                        </NavLink> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMenus;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'http://sdelka/php/'//,\r\n\t//headers: {'Access-Control-Allow-Origin' : '*', 'Accept': 'application/json','Content-Type': 'application/json'}\r\n});\r\n\r\nexport const dovidnukAPI = {\r\n\tgetDovidnuk : (uid) => { return instance.get('dovidnuku.php?userid='+uid) },\r\n\r\n\tgetSelectionConditions : (dovid, uid) => { return instance.get('dovidnuk_user_select.php?userid='+uid+'&dovid='+dovid) },\r\n\r\n\tgetDovButtons : (dovid) => { return instance.get('dovidnuk_button.php?dovid='+dovid) },\r\n\r\n\tgetTableHeader : (dovid) => {return instance.get('dovidnuk_table.php?dovid='+dovid)},\r\n\r\n\tgetTableData : (dovid, id) => {return instance.get('dovidnuk_data.php?dovid='+dovid+'&id='+id)},\r\n\r\n\tsetUpdateTableRow : (id_dov, dataf, id_row) => { \r\n\t\tlet d = JSON.stringify(dataf);\r\n\t\tinstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\treturn instance.post('dovidnuk_ins_upd.php', {userroles : id_dov, datafields : dataf, id : id_row});\r\n\t},\r\n\r\n\tdeleteRowDovidnuk : (id_dov, id_row) => {\r\n\t\treturn instance.get('dovidnuk_del.php?dovid='+id_dov+'&id='+id_row);\r\n\t},\r\n\r\n\tgetSelectButton : (id_dov, id_but) => {\r\n\t\treturn instance.get('dovidnuk_select_button.php?id_dov='+id_dov+'&id_but='+id_but);\r\n\t}\r\n}","import {dovidnukAPI} from './../API/apidovidnuk';\r\n\r\nconst SETDOV = 'set_selected_dovidnuk';\r\nconst SETALLDOV = 'set_all_dovidnuku';\r\nconst SELECTCOND = 'get_selection_condition';\r\nconst DOVBUTTON = 'get_dovidnuk_buttons';\r\nconst USERSELECTCOND = 'user_sected_selection_condition';\r\nconst DOVTABLEHEADER = 'get_table_header';\r\nconst DOVTABLEDATA = 'get_table_data';\r\nconst SELDOVROW = 'set_user_select_row';\r\nconst EDITROW = 'set_user_edit_row';\r\nconst SELBUT = 'set_data_selected_button';\r\nconst CLOSEMODAL = 'close_modal_form';\r\n\r\nlet initialState = {\r\n    selectDov : 0,\r\n    selectDovRow : -1,\r\n    is_view_table : 1,\r\n    dataDovidnuk : [],\r\n    dataSelectionConditions : [],\r\n    selectedDataSelectionConditions : [],\r\n    dovButtons : [],\r\n    tableHeader : [],\r\n    tableData : [],\r\n    refId : 0,\r\n    refCode : -1,\r\n    refType : '',\r\n    refFileResult : '',\r\n    refHeader : [],\r\n    refData : [],\r\n    isModal : 0\r\n}\r\n\r\nconst setDovidnukAction = (code_dov) => ({type : SETDOV, id_dov : code_dov});\r\nconst setDovidnukuAction = (dov) => ({type : SETALLDOV, arrdov : dov});\r\nconst setSelectConditions = (selcond) => ({type : SELECTCOND, selcondarr : selcond});\r\nconst setButtons = (dovbutton) => ({type : DOVBUTTON, butt : dovbutton});\r\nconst setUserSelectConditions = (index, indexdata) => ({type : USERSELECTCOND, dataindex : index, data : indexdata});\r\nconst setTableHeader = (data) => ({type : DOVTABLEHEADER, tableheader : data});\r\nconst setTableData = (data) => ({type : DOVTABLEDATA, tabledatas : data});\r\nconst setSelectRow = (data) => ({type : SELDOVROW, row : data});\r\nconst setUserEditRow = (index, data) => ({type : EDITROW, indexrow : index, datarow : data});\r\nconst setSelectButton = (refcode, reftype, refheader, refdata, refid, ismodal, refresult) =>({type : SELBUT, ref_code : refcode, ref_type : reftype, ref_header : refheader, ref_data : refdata, ref_id : refid, is_modal : ismodal, ref_result : refresult})\r\nconst closeModalForm = () => ({type :CLOSEMODAL});\r\n\r\nlet dovidnukReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case SETDOV :\r\n            return {\r\n                ...state,\r\n                selectDov : action.id_dov\r\n            }\r\n        case SETALLDOV : \r\n            return {\r\n                ...state,\r\n                dataDovidnuk : action.arrdov\r\n            }\r\n        case SELECTCOND :\r\n            return {\r\n                ...state,\r\n                dataSelectionConditions : action.selcondarr,\r\n                selectedDataSelectionConditions : action.selcondarr.map((a) => {return -1})\r\n                }\r\n        case DOVBUTTON : \r\n            return {\r\n                ...state,\r\n                dovButtons : action.butt\r\n            }\r\n        case USERSELECTCOND : \r\n            return {                    \r\n                ...state,\r\n                selectedDataSelectionConditions : state.selectedDataSelectionConditions.map( (a,index) => {index=action.dataindex?action.data:a} )\r\n            }\r\n        case DOVTABLEHEADER :\r\n            return {\r\n                ...state,\r\n                tableHeader : action.tableheader\r\n            }\r\n        case DOVTABLEDATA : \r\n            return {\r\n                ...state,\r\n                tableData : action.tabledatas\r\n            }\r\n        case SELDOVROW :\r\n            return {\r\n                ...state,\r\n                selectDovRow : action.row\r\n            }\r\n        case EDITROW : \r\n            return {\r\n                ...state,\r\n                tableData : state.tableData.map((a, index) => { if (index === action.indexrow) {return action.datarow }else {return a}})\r\n                \r\n            }\r\n            case SELBUT :\r\n                return {\r\n                    ...state,\r\n                    refId : action.ref_id,\r\n                    refCode : action.ref_code,\r\n                    refType : action.ref_type,\r\n                    refHeader : action.ref_header,\r\n                    refData : action.ref_data,\r\n                    isModal : action.is_modal,\r\n                    refFileResult : action.ref_result\r\n                }\r\n            case CLOSEMODAL :\r\n                return {\r\n                    ...state,\r\n                    isModal : 0\r\n                }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport const getDovidnuku = (uid) => (dispatch) => {\r\n    dovidnukAPI.getDovidnuk(uid).then( (response) => {\r\n        dispatch(setDovidnukuAction(response.data))\r\n    })\r\n}\r\n\r\nexport const selectDovidnuk = (id_dov, uid) => async (dispatch) => {\r\n   \r\n    dispatch(setDovidnukAction(id_dov));\r\n    dovidnukAPI.getSelectionConditions(id_dov, uid).then((response) => {\r\n        dispatch(setSelectConditions(response.data));\r\n    })\r\n    dovidnukAPI.getDovButtons(id_dov).then((response) => {\r\n        dispatch(setButtons(response.data));\r\n    })\r\n    let response = await dovidnukAPI.getTableHeader(id_dov);\r\n    if (response) {\r\n        dispatch(setTableHeader(response.data));\r\n    }\r\n    let response1 = await dovidnukAPI.getTableData(id_dov, -9);\r\n    if (response1) {\r\n        dispatch(setTableData(response1.data));\r\n    }\r\n}\r\n\r\nexport const selectSelectionConditions = (index, indexdata, iddov) => async (dispatch) => {\r\n    dispatch(setUserSelectConditions(index, indexdata));\r\n    let response = await dovidnukAPI.getTableData(iddov, indexdata);\r\n    if (response) {\r\n        dispatch(setTableData(response.data));\r\n    }\r\n}\r\n\r\nexport const setTable = (indexdata, iddov) => async (dispatch) => {\r\n\r\n    let response = await dovidnukAPI.getTableHeader(iddov);\r\n    if (response) {\r\n        dispatch(setTableHeader(response.data));\r\n    }\r\n    let response1 = await dovidnukAPI.getTableData(iddov, indexdata);\r\n    if (response1) {\r\n        dispatch(setTableData(response1.data));\r\n    }\r\n}\r\n\r\nexport const selectRow = (indexrow) => (dispatch) =>{\r\n    dispatch(setSelectRow(indexrow));\r\n}\r\n\r\nexport const setEditRow = (indexrow, datarow, idrow, iddov,d) => async (dispatch) => {\r\n    let response = await dovidnukAPI.setUpdateTableRow(iddov, d, idrow);\r\n    if (response) {\r\n        dispatch(setUserEditRow(indexrow, datarow));\r\n    }\r\n     \r\n}\r\n\r\nexport const deleteRow =  (id_dov, id_row) => async (dispatch) => {\r\n    let response = await dovidnukAPI.deleteRowDovidnuk(id_dov, id_row);\r\n    if (response) {\r\n        let response1 = await dovidnukAPI.getTableData(id_dov, -9);\r\n        if (response1) {\r\n            dispatch(setTableData(response1.data));\r\n        }\r\n    }\r\n}\r\n\r\nexport const buttonClick = (id_dov, id_but, id_row) => async (dispatch) => {\r\n//   console.log('Reducer  button click - '+id_but+' for row '+id_row+' for dovidnuk '+id_dov);\r\n   let response = await dovidnukAPI.getSelectButton(id_dov, id_but);\r\n    if (response) {\r\n               // console.log(response);\r\n        if (response.data['0'] === 0) {\r\n            dispatch(setSelectButton(response.data['0'],\r\n                                     response.data['typedata'],\r\n                                     response.data['fields'],\r\n                                     {'password1' : '', 'password2' : ''},\r\n                                    id_row,\r\n                                    1,\r\n                                    response.textresult\r\n            ));\r\n            console.log('Password');\r\n        } else\r\n        if (response.data['0'] === 1) {\r\n            dispatch(setSelectButton(response.data['0'],\r\n                                     response.data['typedata'],\r\n                                     [],\r\n                                    [],\r\n                                    id_row,\r\n                                    0,\r\n                                    ''\r\n            ));\r\n            console.log('Exit');\r\n        } else {\r\n            console.log('table');\r\n        }\r\n    }\r\n}\r\n\r\nexport const closeModalForms = () => (dispatch) => {\r\n    dispatch(closeModalForm());\r\n}\r\n\r\nexport default dovidnukReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet DovidnukMenu = ({userId, DataDovidnuk, selectDovidnuk}) => {\r\n\r\n    let SecMenu = DataDovidnuk.map((a) => {\r\n                                        return (\r\n                                                <NavLink key={a.code_dovid}  className='dovbutton' to = '/Dovidnuk' onClick={ () => {\r\n                                                                                        selectDovidnuk(a.code_dovid, userId);\r\n                                                                                        window.sessionStorage.setItem('dovcode', a.code_dovid)}}>\r\n                                                    <span>\r\n                                                        {a.name_dovid}\r\n                                                    </span>\r\n                                                </NavLink>\r\n                                        )})\r\n\r\n    return(\r\n        <div>\r\n            <hr />\r\n            <div className='wraper'>\r\n                <div className='navdiv'>\r\n                    <div className='ribbon'>\r\n                        {SecMenu}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DovidnukMenu;","import React from 'react';\r\n\r\nlet DovidnukSelections = ({dataSelectionConditions, selectedData, selectdov, selectSelectionConditions}) => {\r\n    let DovSel = dataSelectionConditions.map((a, index) => {\r\n            return (\r\n                <div key = 'dovselect'>\r\n                    <label> {a.field_caption} </label>\r\n                    <select key = {index}\r\n                            data-key = {index} \r\n                            className= 'users_select' \r\n                            id={a.table_user_select} \r\n                            value={selectedData[index]} \r\n                            onChange = {(e) => {selectSelectionConditions(e.target.getAttribute('data-key'), e.target.value, selectdov)}}>\r\n                        <option key = '-1' value='-1'></option>\r\n                        {a.data_select.map((b, indexb) => {\r\n                            return ( <option key = {indexb} value={b.field_user_id}>{b.field_user_view}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n             )})\r\n \r\n    if (dataSelectionConditions.length > 0) {\r\n        return ( <div> {DovSel} </div>) }\r\n        else return null;\r\n}\r\n\r\nexport default DovidnukSelections;","import React from 'react';\r\n\r\nclass TableRow extends React.Component {\r\n    state = {\r\n        selectRow : 0,\r\n        datarow : {}\r\n    }\r\n\r\n    setSelectRow () {\r\n        this.setState({ selectRow : 1});\r\n    }\r\n\r\n    setEditValue (i, data){\r\n        let arr = this.state.datarow;\r\n        arr[i] = data;\r\n        this.setState({datarow : arr});\r\n    }\r\n\r\n    saveEditValue (){\r\n        let d = {};\r\n        for (var i=0; i< this.props.tableHeader.length; i++){\r\n            d[i] = [];\r\n            d[i][0] = this.props.tableHeader[i]['name_table'];\r\n            d[i][1] = this.props.tablerow[this.props.tableHeader[i]['name_table']];\r\n            d[i][2] = this.state.datarow[this.props.tableHeader[i]['name_table']];\r\n        }\r\n        this.props.setEditRow(this.props.index,  this.state.datarow, this.state.datarow['0'], this.props.selectDov, d);\r\n        this.setState({ selectRow : 0});\r\n    }\r\n\r\n    unsaveEditValue (){\r\n        let arr = [];\r\n        arr['0'] = this.props.tablerow[0];\r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n        }\r\n        this.setState({ datarow : arr, selectRow : 0});\r\n    }\r\n\r\n    deleteEditValue (){\r\n        this.props.deleteValue(this.props.selectDov, this.props.tablerow[0]);\r\n        this.setState({ selectRow : 0});\r\n    }\r\n\r\n    clickButton (id_but){\r\n        this.props.clickButton(this.props.selectDov ,id_but, this.props.tablerow[0])\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.unsaveEditValue();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.tablerow !== this.props.tablerow) {\r\n            let arr = [];\r\n            for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n                arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n            }\r\n            this.setState({datarow : arr})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let str = []; \r\n        let str1 = []; \r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            if (this.state.selectRow === 1) {\r\n                str[i] = <td key = {i}><input className = 'dovinputtable'\r\n                                              type = 'text' \r\n                                              value = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                              data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                              onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.value)}}\r\n                                             /></td>;\r\n            } else \r\n                str[i] = <td key = {this.props.tableHeader[i]['name_table']}>{this.state.datarow[this.props.tableHeader[i]['name_table']]}</td>;\r\n        }\r\n        for (var i=0; i<this.props.dovbutton.length; i++)  { \r\n            if (this.props.dovbutton[i]['in_row'] === 1) \r\n                str1[i] = <td key = {this.props.dovbutton[i]['id_button']}> \r\n                    <button value = {this.props.dovbutton[i]['name_button']} \r\n                            data-key = {this.props.dovbutton[i]['id_button']}\r\n                            data-id = {this.props.index} \r\n                            onClick = {(e) => this.clickButton(e.target.getAttribute('data-key'), e.target.getAttribute('data-id'))}\r\n                            >\r\n                            {this.props.dovbutton[i]['name_button']}\r\n                            </button> </td>;\r\n        }\r\n        let but = [];\r\n        but[0] = <tr key = {this.props.index} \r\n                    data-key = {this.props.index}\r\n                    onDoubleClick = {() => { this.setSelectRow()}} >\r\n                    {str}{str1}\r\n                </tr>;\r\n        if (this.state.selectRow === 1) {\r\n            but[1] = <tr><td colSpan = {this.props.tableHeader.length}>\r\n                            <button onClick = {() => {this.saveEditValue()}}>Зберегти зміни</button>\r\n                            <button onClick = {() => {this.unsaveEditValue()}}>Відмінити зміни</button>\r\n                            <button onClick = {() => {this.deleteEditValue()}}>Видалити</button></td></tr>;\r\n                        }\r\n\r\n        return <> {but} </>\r\n    }\r\n}\r\n \r\nexport default TableRow;","import React from 'react';\r\n\r\nexport default class ModalForm extends React.Component {\r\n\r\n    state = {\r\n        values : []\r\n    }\r\n\r\n    setValues(index, val){\r\n        let arr = [...this.state.values];\r\n        arr[index] = val;\r\n        this.setState({values : arr});\r\n    }\r\n\r\n    closeModal(){\r\n        this.props.closeModalForms();\r\n    }\r\n\r\n    saveValue(){\r\n        console.log('save value');\r\n        console.log(this.state.values);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.refCode === 0) {\r\n            this.setState({values : this.props.refData});\r\n        }\r\n    }\r\n\r\n    render (){\r\n        console.log('Moodal window show');\r\n        let str = '';\r\n        if (this.props.refCode === 0) {\r\n            let str1 = [];\r\n            console.log('values');\r\n            console.log(this.state.values);\r\n            for (let i = 0; i<this.state.values.length; i++){\r\nconsole.log('str1');\r\n                str1[i] = <p>\r\n                        <label> {this.props.refHeader[i]} </label>\r\n                        <input type='password' value = {this.state.values[this.setValues(this.props.refHeader[i])]} onChange= {(e) => {this.setValues(this.props.refHeader[i],e.target.value)}} />\r\n                    </p>\r\n                    console.log(str1[i]);\r\n            }\r\n            str = <>\r\n                    {str1}\r\n                    <p>\r\n                        <button onClick = {() => {this.saveValue()}}>Зберегти</button>\r\n                        <button onClick = {() => {this.closeModal()}}>Відмінити</button>\r\n                    </p>\r\n                </>;\r\n        }\r\n        return  <> <div id=\"modal_form\">\r\n                    <div><span id=\"modal_close\" onClick = {()=>{this.closeModal()}}>X</span></div>\r\n                    <div>{str}</div>\r\n               </div>\r\n                <div id=\"overlay\"></div></>\r\n                \r\n    }\r\n} ","import React from 'react';\r\nimport TableRow from './tablebody';\r\nimport ModalForm from './../Modal/modalform';\r\n\r\n\r\nlet Tables = ({tableHeader, tableData, dovbutton, selectdov, selectdovrow, dovButtons, selectRow, setEditRow, clickButton, deleteRow, isModal, refId, refCode, refType, refFileResult, refHeader, refData, closeModalForms}) => {\r\n\r\n    let TableHeaderButton = dovbutton.map((a, index) => { if (a.in_row) return <th key = {'b'+index}></th>});\r\n\r\n\r\n    let TableHeader = tableHeader.map((a, index) => {\r\n        return <th key = {index}>{a.name_col}</th>\r\n    });\r\n\r\n    let TableBody = tableData.map((a, index) => { \r\n        return <TableRow tableHeader = {tableHeader} \r\n                         dovbutton = {dovbutton}\r\n                         tablerow = {a} \r\n                         index = {index} \r\n                         selectdovrow = {selectdovrow} \r\n                         selectRow = {selectRow} \r\n                         selectDov = {selectdov}\r\n                         setEditRow={setEditRow} \r\n                         clickButton={clickButton}\r\n                         deleteValue={deleteRow}\r\n                         isModal = {isModal}\r\n                         refId = {refId}\r\n                         refCode = {refCode}\r\n                         refType = {refType}\r\n                         refFileResult = {refFileResult}\r\n                         refHeader = {refHeader}\r\n                         refData = {refData}\r\n                         />;        \r\n    });\r\n\r\n    let TableAddRow = tableHeader.map((a, index) => {\r\n        return <td key = {index}><input type = 'text' className = 'dovinputtable'/></td>\r\n    });\r\n    let TableButon = dovbutton.map((a,index) => { if (a['in_row'] === 1) return <td key = {'b'+index}></td>});\r\n\r\n    let T = () => {\r\n        if ( tableHeader.length > 0 ){\r\n            return <table className='TableDespatch'>  \r\n                    <tbody>\r\n                        <tr key = '-2'> \r\n                            {TableHeader}\r\n                            {TableHeaderButton} \r\n                        </tr>\r\n                        <tr key = '-1'>\r\n                            {TableAddRow} \r\n                            {TableButon}\r\n                        </tr>\r\n                        {TableBody}\r\n                    </tbody>\r\n                </table>\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n    let DB = dovButtons.map((a, index) => {\r\n        if (!a.in_row) return <button key = {index} value = {a.id_dovidnuk}>{a.name_button}</button>\r\n        return null;\r\n    });\r\n\r\n    let ModalForms = () => { \r\n        if (isModal === 1) {\r\n            return <ModalForm refId = {refId}\r\n                            refCode = {refCode}\r\n                            refType = {refType}\r\n                            refFileResult = {refFileResult}\r\n                            refHeader = {refHeader}\r\n                            refData = {refData}\r\n                            closeModalForms = {closeModalForms}\r\n            />\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n           {DB}\r\n           {T()}\r\n           {ModalForms()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {buttonClick, selectDovidnuk, getDovidnuku, selectSelectionConditions, setTable, selectRow, setEditRow, deleteRow, closeModalForms} from './../../Redux/dovidnukreducer';\r\nimport DovidnukMenu from './dovidnukmenu';\r\nimport DovidnukSelections from './dovidnukselections';\r\nimport Tables from './tables';\r\n\r\nclass DovidnukContainer extends React.Component{\r\n    componentDidMount (){\r\n        this.props.getDovidnuku(this.props.userId);\r\n        let dov_id = window.sessionStorage.getItem('dovcode');\r\n        if (dov_id) this.props.selectDovidnuk(dov_id, this.props.userId)\r\n    }\r\n    \r\n    render(){\r\n        return <div>\r\n                <DovidnukMenu   userId = {this.props.userId} \r\n                                DataDovidnuk = {this.props.dovidnuk.dataDovidnuk} \r\n                                selectDovidnuk = {this.props.selectDovidnuk} />\r\n                <DovidnukSelections dataSelectionConditions = {this.props.dovidnuk.dataSelectionConditions} \r\n                                    selectedData = {this.props.dovidnuk.selectedDataSelectionConditions}\r\n                                    selectdov = {this.props.dovidnuk.selectDov}\r\n                                    selectSelectionConditions = {this.props.selectSelectionConditions} />\r\n                <Tables tableHeader = {this.props.dovidnuk.tableHeader}\r\n                        tableData = {this.props.dovidnuk.tableData} \r\n                        selectedData = {this.props.dovidnuk.selectedDataSelectionConditions}\r\n                        selectdov = {this.props.dovidnuk.selectDov}\r\n                        selectdovrow = {this.props.dovidnuk.selectDovRow}\r\n                        dovButtons = {this.props.dovidnuk.dovButtons}\r\n                        setTable = {this.props.setTable}\r\n                        selectRow = {this.props.selectRow} \r\n                        dovbutton = {this.props.dovidnuk.dovButtons}\r\n                        setEditRow = {this.props.setEditRow} \r\n                        clickButton = {this.props.buttonClick}\r\n                        deleteRow = {this.props.deleteRow}\r\n\r\n                        isModal = {this.props.dovidnuk.isModal}\r\n                        refId = {this.props.dovidnuk.refId}\r\n                        refCode = {this.props.dovidnuk.refCode}\r\n                        refType = {this.props.dovidnuk.refType}\r\n                        refFileResult = {this.props.dovidnuk.refFileResult}\r\n                        refHeader = {this.props.dovidnuk.refHeader}\r\n                        refData = {this.props.dovidnuk.refData}\r\n                        closeModalForms = {this.props.closeModalForms}\r\n                        />\r\n            </div>\r\n    }\r\n} \r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dovidnuk : state.dovidnuk,\r\n        userId : state.loguser.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {buttonClick, selectDovidnuk, getDovidnuku, selectSelectionConditions, setTable, selectRow, setEditRow, deleteRow, closeModalForms})(DovidnukContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {setDisconect} from './../../Redux/loguserreducer';\r\nimport MainMenus from './mainmenu';\r\nimport DovidnukContainer from './../DataDovidnuk/dovidnukcontainer';\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n    render() {\r\n        if (this.props.userId === 0) {\r\n            return null;\r\n        } else { \r\n            return  <BrowserRouter>\r\n                        <MainMenus userId = {this.props.userId} selectMainMenu = {this.props.selectMainMenu} DisconectingUser = {this.props.setDisconect}/>\r\n                        <Route exact path='/' />\r\n                        <Route path='/Dovidnuk' render={() => <DovidnukContainer {...this.props} />} />\r\n                        \r\n                    </BrowserRouter>\r\n        }\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId : state.loguser.userId, \r\n        selectMainMenu : state.loguser.selectMainMenu,\r\n        userSelectMenu : state.loguser.userSelectMenu\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {setDisconect})(MainContainer);","import React from 'react';\r\nimport LoginContainer from './Component/Login/logincontainer';\r\nimport MainContainer from './Component/MainBody/maincontainer';\r\nimport {connect} from 'react-redux';\r\nimport {setConnect} from './Redux/loguserreducer';\r\n\r\nconst App = class extends  React.Component {\r\n    componentDidMount() {\r\n        let log = window.sessionStorage.getItem('login');\r\n        let pass = window.sessionStorage.getItem('password');\r\n        console.log('AppMain DidMount user = '+ log+'  '+ pass)\r\n        console.log('AppMain DidMount main menu  = '+ window.sessionStorage.getItem('maincomp'));\r\n        console.log('AppMain DidMount dov menu  = '+ window.sessionStorage.getItem('dovcode'));\r\n        if (log  && pass) this.props.setConnect(log, pass);\r\n    };\r\n\r\n    render(){    \r\n        if (this.props.userId === 0) {\r\n            return <div>\r\n                < LoginContainer />\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <MainContainer />\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId : state.loguser.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setConnect})(App);","const LOGIN = 'login';\r\nconst LOGOUT = 'logout';\r\n\r\nlet initialState = {\r\n\r\n    SelectMainMenu : [\r\n          {name_dovid :'Адміністрування', code_dov:\"1\"}, \r\n          {name_dovid :'Табелювання', code_dov:\"2\"},\r\n          {name_dovid :'Довідник', code_dov:\"3\"}\r\n    ]\r\n}\r\n\r\nexport const setLoginAction = (log, pas) => ({type : LOGIN, logname : log, password: pas})\r\nexport const setLogoutAction = () => ({type : LOGOUT})\r\n\r\nlet mainReducer = (state = initialState, action)  => {\r\n    switch(action.type){\r\n        case LOGIN :\r\n            state.userLogin = action.logname;\r\n            state.userPassword = action.password; \r\n            state.paths = '/main';\r\n            return state;\r\n        case LOGOUT :\r\n                state.userLogin = '';\r\n                state.userPassword = ''; \r\n                state.paths = '/';\r\n                return state;\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport logUserReducer from './loguserreducer';\r\nimport dovidnukReducer from './dovidnukreducer';\r\nimport mainReducer from './mainreducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({loguser:logUserReducer, main:mainReducer, dovidnuk:dovidnukReducer, form:formReducer});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/reduxstore';\n\nlet AppMain = () => {\n    return <BrowserRouter>\n            <Provider store={store}>\n                <App />\n               \n            </ Provider>\n        </ BrowserRouter>\n};\n\nexport default AppMain;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppMain from './appmain';\n\nReactDOM.render( < AppMain />, document.getElementById('root'));\n"],"sourceRoot":""}