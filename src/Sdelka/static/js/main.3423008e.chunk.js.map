{"version":3,"sources":["API/apiuser.js","Redux/loguserreducer.js","Component/Login/logincontainer.jsx","Component/MainBody/mainmenu.jsx","API/apidovidnuk.js","Redux/dovidnukreducer.js","Component/DataDovidnuk/dovidnukmenu.jsx","Component/DataDovidnuk/dovidnukselections.jsx","Component/DataDovidnuk/tablebody.jsx","Component/DataDovidnuk/tableaddrow.jsx","Component/Modal/modaltable.jsx","Component/Modal/modalpassword.jsx","Component/Modal/modalform.jsx","Component/DataDovidnuk/tables.jsx","Component/DataDovidnuk/dovidnukcontainer.jsx","Component/MainBody/maincontainer.jsx","App.js","Redux/mainreducer.js","Redux/reduxstore.js","appmain.js","index.js"],"names":["instance","axios","baseURL","userAPI","ul","up","get","id","initialState","userLogin","userPassword","userName","userId","userAccess","userRoles","selectMainMenu","setConnect","log","pas","dispatch","then","response","data","alert","uid","uname","name_user","uroles","type","logname","password","userid","name","roles","setConnectAction","logUserReducer","state","action","window","sessionStorage","setItem","userSelectMenu","comp","LoginContainer","login","props","onLoginChange","e","setState","currentTarget","value","onPasswordChange","connectedUser","prevProps","prevState","this","className","placeholder","onChange","onClick","React","Component","connect","loguser","MainMenus","DisconectingUser","MainMenu","map","a","key","code_dov","to","component","name_dovid","removeItem","dovidnukAPI","dovid","butid","console","id_dov","dataf","id_row","defaults","headers","post","userroles","datafields","id_but","paths","datac","data_dov","data_but","datacombo","data_id","SETDOV","SELECTCOND","DOVBUTTON","USERSELECTCOND","SELDOVROW","SELBUT","selectDov","selectDovRow","is_view_table","dataDovidnuk","dataSelectionConditions","selectedDataSelectionConditions","dovButtons","tableHeader","tableData","tableRowCombo","refId","refBut","refCode","refType","refFileResult","refHeader","refData","refCombo","isModal","setUserSelectConditions","index","indexdata","dataindex","setTableHeader","tableheader","setTableData","tabledatas","setSelectButton","refbut","refcode","reftype","refheader","refdata","refcombo","refid","ismodal","refresult","ref_but","ref_code","ref_type","ref_header","ref_data","ref_combo","ref_id","is_modal","ref_result","dovidnukReducer","arrdov","selcondarr","butt","d","i","length","row","indexrow","datarow","DovidnukMenu","DataDovidnuk","selectDovidnuk","SecMenu","code_dovid","DovidnukSelections","selectedData","selectdov","selectSelectionConditions","DovSel","field_caption","data-key","table_user_select","target","getAttribute","data_select","b","indexb","field_user_id","field_user_view","TableRow","selectRow","arr","id_select","ii","selectDataSelectionConditions","j","tablerow","setEditRow","deleteValue","clickButton","unsaveEditValue","setEditValue","name_col","checked","str","str1","RowCombo","clbut","dovbutton","data-id","but","onDoubleClick","setSelectRow","colSpan","saveEditValue","deleteEditValue","TableAddRow","undefined","readonly","ModalForm","values","changes","val","chk","arrchange","closeModalForms","rd","rdata","t","k","setRefData","strbt","dtr","stylecontainer","width","height","heightForm","overflow","hdr","thr","style","dd","setValues","data-index","saveValue","closeModal","ModalPassword","stylemodal","top","innerHeight","left","innerWidth","lngdata","Tables","selectdovrow","deleteRow","TableHeaderButton","in_row","TableHeader","TableBody","DB","id_dovidnuk","name_button","ModalForms","DovidnukContainer","getDovidnuku","dov_id","getItem","dovidnuk","buttonClick","response2","response1","status","selcond","iddov","setTable","idrow","refdatacombo","MainContainer","setDisconect","exact","path","render","App","pass","SelectMainMenu","mainReducer","reducers","combineReducers","main","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","AppMain","ReactDOM","document","getElementById"],"mappings":"yOAEMA,EAAWC,SAAa,CAC7BC,QAAS,uBAIGC,EACD,SAACC,EAAIC,GAAS,OAAOL,EAASM,IAAI,8BAA8BF,EAAG,iBAAiBC,IADnFF,EAGG,SAACI,GAAS,OAAOP,EAASM,IAAI,wBAAwBC,I,yjBCRtE,IAIIC,EAAe,CACXC,UAAY,GACZC,aAAe,GACfC,SAAW,GACXC,OAAS,EACTC,WAAa,EACbC,UAAW,KACXC,eAAiB,IAoCZC,EAAa,SAACC,EAAIC,GAAL,OAAa,SAACC,GACpChB,EAAiBc,EAAKC,GAAKE,MAAK,SAACC,GAC7B,GAAoC,IAAhCA,EAASC,KAAT,WACAC,MAAMF,EAASC,KAAT,WACH,CACH,IAAIE,EAAMH,EAASC,KAAT,MAAuB,GAAvB,GACNG,EAAQJ,EAASC,KAAT,MAAuB,GAAvB,UACZnB,EAAqBqB,GAAKJ,MAAK,SAACC,GAC5BF,EAZgB,SAACF,EAAKC,EAAKX,EAAImB,EAAWC,GAA1B,MAAsC,CAACC,KA3CzD,QA2CuEC,QAAUZ,EAAKa,SAAUZ,EAAKa,OAAQxB,EAAIyB,KAAMN,EAAWO,MAAON,GAY9HO,CAAkBjB,EAAKC,EAAKM,EAAKC,EAAOJ,EAASC,gBAW3Da,EApDM,WAAmC,IAAlCC,EAAiC,uDAAzB5B,EAAc6B,EAAW,uCACnD,OAAOA,EAAOT,MACV,IAhBM,QAmBF,OAFAU,OAAOC,eAAeC,QAAQ,QAASH,EAAOR,SAC9CS,OAAOC,eAAeC,QAAQ,WAAYH,EAAOP,UAC1C,EAAP,GACOM,EADP,CAEI3B,UAAY4B,EAAOR,QACnBnB,aAAe2B,EAAOP,SACtBlB,OAASyB,EAAON,OAChBpB,SAAW0B,EAAOL,MACfI,EAAMrB,eANb,CAOIA,eAAiBsB,EAAOJ,QAEhC,IA3BO,SA4BH,OAAO,EAAP,GACOG,EADP,CAEI1B,aAAe,GACfE,OAAS,IAEjB,IAhCQ,WAiCJ,OAAO,EAAP,GACOwB,EADP,CAEIK,eAAiBJ,EAAOK,OAEhC,QAAU,OAAON,ICrCnBO,E,2MAEFP,MAAQ,CACJQ,MAAQ,EAAKC,MAAMpC,UACnBqB,SAAU,EAAKe,MAAMnC,c,EAGzBoC,cAAgB,SAACC,GAAQ,EAAKC,SAAU,CAAEJ,MAAQG,EAAEE,cAAcC,S,EAElEC,iBAAmB,SAACJ,GAAQ,EAAKC,SAAS,CAAClB,SAAUiB,EAAEE,cAAcC,S,EAErEE,cAAgB,WAAQ,EAAKP,MAAM7B,WAAW,EAAKoB,MAAMQ,MAAO,EAAKR,MAAMN,W,kFAExDuB,EAAWC,GACtBD,EAAU3C,eAAiB6C,KAAKV,MAAMnC,cAAc6C,KAAKP,SAAS,CAAClB,SAAWyB,KAAKV,MAAMnC,iB,+BAI7F,OAA0B,IAAtB6C,KAAKV,MAAMjC,OAEX,yBAAK4C,UAAU,cACX,2BAAO5B,KAAK,OACJ6B,YAAY,mBACZP,MAAQK,KAAKnB,MAAMQ,MACnBc,SAAWH,KAAKT,gBAGxB,2BAAOlB,KAAK,OACJ6B,YAAY,sBACZP,MAAQK,KAAKnB,MAAMN,SACnB4B,SAAWH,KAAKJ,mBAGpB,4BAAQQ,QAAUJ,KAAKH,eAAvB,6BAKA,S,GAtCSQ,IAAMC,WAkDpBC,eARO,SAAC1B,GACnB,MAAO,CACH3B,UAAY2B,EAAM2B,QAAQtD,UAC1BC,aAAe0B,EAAM2B,QAAQrD,aAC7BE,OAASwB,EAAM2B,QAAQnD,UAIS,CAAEI,cAA3B8C,CAAyCnB,G,QCnBzCqB,EAhCC,SAAC,GAAkD,IAAhDpD,EAA+C,EAA/CA,OAAQG,EAAuC,EAAvCA,eAAiBkD,EAAsB,EAAtBA,iBAEpCC,EAAWnD,EAAeoD,KAAI,SAACC,GAC/B,OACI,kBAAC,IAAD,CAASC,IAAKD,EAAEE,SAAWd,UAAU,YAAYe,GAAI,IAAIH,EAAEI,UAAWb,QAAW,kBAAMrB,OAAOC,eAAeC,QAAQ,WAAY,IAAI4B,EAAEI,aACnI,8BACKJ,EAAEK,gBAMnB,OAAe,IAAX7D,EACO,KAGH,yBAAK4C,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,UACVU,EACD,kBAAC,IAAD,CAASV,UAAU,YAAYe,GAAI,IAAKZ,QAAS,WACDrB,OAAOC,eAAemC,WAAW,YACjCT,MAC5C,uE,wBCxBtBjE,EAAWC,SAAa,CAAEC,QAAS,uBAE5ByE,EACE,SAACnD,GAAU,OAAOxB,EAASM,IAAI,wBAAwBkB,IADzDmD,EAGa,SAACC,EAAOpD,GAAU,OAAOxB,EAASM,IAAI,mCAAmCkB,EAAI,UAAUoD,IAHpGD,EAKI,SAACC,GAAY,OAAO5E,EAASM,IAAI,6BAA6BsE,IALlED,EAOK,SAACC,EAAOC,GAGxB,OAFFC,QAAQ7D,IAAI,oCACZ6D,QAAQ7D,IAAI,4BAA4B2D,EAAM,UAAUC,GAC/C7E,EAASM,IAAI,4BAA4BsE,EAAM,UAAUC,IAVrDF,EAYG,SAACC,EAAOrE,EAAIqC,GAC1B,OAAO5C,EAASM,IAAI,2BAA2BsE,EAAM,OAAOrE,EAAG,cAAcqC,IAblE+B,EAgBQ,SAACI,EAAQC,EAAOC,GAEnC,OADAjF,EAASkF,SAASC,QAAQC,KAAK,gBAAkB,oCAC1CpF,EAASoF,KAAK,uBAAwB,CAACC,UAAYN,EAAQO,WAAaN,EAAOzE,GAAK0E,KAlBhFN,EAqBQ,SAACI,EAAQE,GAC5B,OAAOjF,EAASM,IAAI,0BAA0ByE,EAAO,OAAOE,IAtBjDN,EAyBM,SAACI,EAAQQ,GAC1B,OAAOvF,EAASM,IAAI,qCAAqCyE,EAAO,WAAWQ,IA1BhEZ,EA6BI,SAACa,EAAOT,EAAQQ,EAAQN,GAQvC,OAPFH,QAAQ7D,IAAI,4BACZ6D,QAAQ7D,IAAIuE,GACZV,QAAQ7D,IAAI8D,GACZD,QAAQ7D,IAAIsE,GACZT,QAAQ7D,IAAIgE,GACZH,QAAQ7D,IAAIuE,EAAM,aAAaT,EAAO,aAAaQ,EAAO,YAAYN,GACtEH,QAAQ7D,IAAI,4BACHjB,EAASM,IAAIkF,EAAM,aAAaT,EAAO,aAAaQ,EAAO,YAAYN,IArCnEN,EAwCI,SAACI,EAAQE,EAAQD,EAAOS,EAAOF,GAM9C,OALAT,QAAQ7D,IAAI,cACZ6D,QAAQ7D,IAAIwE,GACZX,QAAQ7D,IAAI+D,GACZhF,EAASkF,SAASC,QAAQC,KAAK,gBAAkB,oCAE1CpF,EAASoF,KAAK,4BAA6B,CAACM,SAAWX,EAAQY,SAAWJ,EAAQD,WAAaN,EAAOY,UAAYH,EAAOI,QAAUZ,K,yjBChD5I,IAAMa,EAAS,wBAETC,EAAa,0BACbC,EAAY,uBACZC,EAAiB,kCAGjBC,EAAY,sBAEZC,EAAS,2BAGX3F,EAAe,CACf4F,UAAY,EACZC,cAAgB,EAChBC,cAAgB,EAChBC,aAAe,GACfC,wBAA0B,GAC1BC,gCAAkC,GAClCC,WAAa,GACbC,YAAc,GACdC,UAAY,GACZC,cAAgB,GAChBC,MAAQ,EACRC,OAAS,EACTC,SAAW,EACXC,QAAU,GACVC,cAAgB,GAChBC,UAAY,GACZC,QAAU,GACVC,SAAW,GACXC,QAAU,GAORC,EAA0B,SAACC,EAAOC,GAAR,MAAuB,CAAC7F,KAAOqE,EAAgByB,UAAYF,EAAOlG,KAAOmG,IACnGE,EAAiB,SAACrG,GAAD,MAAW,CAACM,KAlCZ,mBAkCmCgG,YAActG,IAClEuG,EAAe,SAACvG,GAAD,MAAW,CAACM,KAlCZ,iBAkCiCkG,WAAaxG,IAG7DyG,GAAkB,SAACC,EAAQC,EAASC,EAASC,EAAWC,EAASC,EAASC,EAAOC,EAASC,GAAxE,MAAsF,CAAC5G,KAAOuE,EAAQsC,QAAUT,EAAQU,SAAWT,EAASU,SAAWT,EAASU,WAAaT,EAAWU,SAAWT,EAASU,UAAYT,EAAUU,OAAST,EAAOU,SAAWT,EAASU,WAAaT,IAmN5RU,GAhNO,WAAmC,IAAlC9G,EAAiC,uDAAzB5B,EAAc6B,EAAW,uCAEpD,OAAOA,EAAOT,MACV,KAAKkE,EACD,OAAO,KACA1D,EADP,CAEIgE,UAAY/D,EAAO0C,SAE3B,IArDU,oBAsDN,OAAO,KACA3C,EADP,CAEImE,aAAelE,EAAO8G,SAE9B,KAAKpD,EACD,OAAO,KACA3D,EADP,CAEIoE,wBAA0BnE,EAAO+G,WACjC3C,gCAAkCpE,EAAO+G,WAAWjF,KAAI,SAACC,GAAO,OAAQ,OAEhF,KAAK4B,EACD,OAAO,KACA5D,EADP,CAEIsE,WAAarE,EAAOgH,OAE5B,KAAKpD,EAED,IADA,IAAIqD,EAAI,GACCC,EAAI,EAAGA,EAAGnH,EAAMqE,gCAAgC+C,OAAQD,IACzDA,IAAMlH,EAAOqF,UACb4B,EAAEC,GAAKlH,EAAOf,KACbgI,EAAEC,GAAKnH,EAAMqE,gCAAgC8C,GAEtD,OAAO,KACAnH,EADP,CAEIqE,gCAAkC6C,IAE1C,IA5Ee,mBA6EX,OAAO,KACAlH,EADP,CAEIuE,YAActE,EAAOuF,cAE7B,IAhFa,iBAiFT,OAAO,KACAxF,EADP,CAEIwE,UAAYvE,EAAOyF,WAAP,MACZjB,cAAgBxE,EAAOyF,WAAP,QAExB,KAAK5B,EACD,OAAO,KACA9D,EADP,CAEIiE,aAAehE,EAAOoH,MAE9B,IAzFQ,oBA0FJ,OAAO,KACArH,EADP,CAEIwE,UAAYxE,EAAMwE,UAAUzC,KAAI,SAACC,EAAGoD,GAAY,OAAIA,IAAUnF,EAAOqH,SAAkBrH,EAAOsH,QAAsBvF,OAGxH,KAAK+B,EACD,OAAO,KACA/D,EADP,CAEI2E,OAAS1E,EAAOoG,QAChB3B,MAAQzE,EAAO0G,OACf/B,QAAU3E,EAAOqG,SACjBzB,QAAU5E,EAAOsG,SACjBxB,UAAY9E,EAAOuG,WACnBxB,QAAU/E,EAAOwG,SACjBxB,SAAWhF,EAAOyG,UAClBxB,QAAUjF,EAAO2G,SACjB9B,cAAgB7E,EAAO4G,aAE/B,IA1GO,mBA2GH,OAAO,KACA7G,EADP,CAEIkF,QAAU,IAEtB,QAAU,OAAOlF,IC5FVwH,GA5BI,SAAC,GAAuD,IAAtDhJ,EAAqD,EAArDA,OAAQiJ,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,eAAgBrJ,EAAe,EAAfA,UAEnDsJ,EAAUF,EAAa1F,KAAI,SAACC,GACI,OACQ,kBAAC,IAAD,CAASC,IAAKD,EAAE4F,WAAaxG,UAAU,YAAYe,GAAK,YAAYZ,QAAU,WACtCmG,EAAe1F,EAAE4F,WAAYpJ,EAAQH,GACrC6B,OAAOC,eAAeC,QAAQ,UAAW4B,EAAE4F,cAC/E,8BACK5F,EAAEK,gBAKvD,OACI,6BACI,6BACA,yBAAKjB,UAAU,UACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,UACVuG,KAIb,+BCGGE,GA3BU,SAAC,GAA8F,IAA7FzD,EAA4F,EAA5FA,wBAAyB0D,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,UAAWC,EAA0C,EAA1CA,0BAA2B3J,EAAe,EAAfA,UAEhG4J,EAAS7D,EAAwBrC,KAAI,SAACC,EAAGoD,GACrC,OACI,yBAAKnD,IAAM,aACP,mCAASD,EAAEkG,cAAX,KACA,4BAAQjG,IAAOmD,EACP+C,WAAY/C,EACZhE,UAAW,eACXjD,GAAI6D,EAAEoG,kBACNtH,MAAOgH,EAAa1C,GACpB9D,SAAY,SAACX,GACLqH,EAA0BrH,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,MAAOiH,EAAW1J,KAEpG,4BAAQ4D,IAAM,KAAKnB,MAAM,OACxBkB,EAAEuG,YAAYxG,KAAI,SAACyG,EAAGC,GACnB,OAAS,4BAAQxG,IAAOwG,EAAQ3H,MAAO0H,EAAEE,eAAgBF,EAAEG,yBAMnF,OAAIvE,EAAwBgD,OAAS,EACxB,iCAAOa,EAAP,KACG,MCsLLW,G,2MA7MX5I,MAAQ,CACJ6I,UAAY,EACZtB,QAAU,I,8EAIVpG,KAAKP,SAAS,CAACiI,UAAY,M,mCAGjB1B,EAAGjI,GACb,IAAI4J,EAAM3H,KAAKnB,MAAMuH,QACrBuB,EAAI3B,GAAKjI,EACTiC,KAAKP,SAAS,CAAC2G,QAAUuB,M,sCAsBjC,IAAI5B,EAAI,GACJ6B,EAAY,EACZ5B,EAAI,EACJ6B,EAAK,EACT,IAAK7B,EAAI,EAAGA,EAAIhG,KAAKV,MAAM2D,wBAAwBgD,OAAQD,IACvD,IAAsD,IAAjDhG,KAAKV,MAAMwI,8BAA8B9B,IAAgE,cAAhDhG,KAAKV,MAAMwI,8BAA8B9B,GAAqB,CACxHD,EAAE8B,GAAM,GACR9B,EAAE8B,GAAI,GAAK7H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,WACXD,EAAE8B,GAAI,GAAK,KACX,IAAI,IAAIE,EAAI,EAAGA,EAAI/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqDC,OAAQ8B,IACxE/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqD+B,GAArD,gBAA6E/H,KAAKV,MAAMwI,8BAA8B9B,KACtHD,EAAE8B,GAAI,GAAK7H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqD+B,GAArD,SACXH,EAAY5H,KAAKV,MAAMwI,8BAA8B9B,IAG7DD,EAAE8B,GAAI,GAAK,MACXA,IAIR,IAAK7B,EAAE,EAAGA,EAAGhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IAIxC,GAHAD,EAAE8B,EAAG7B,GAAK,GACVD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM8D,YAAY4C,GAAvB,WACbD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM8D,YAAY4C,GAAvB,SACThG,KAAKV,MAAMgE,eAAiBtD,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAGrD,IAFAD,EAAE8B,EAAG7B,GAAG,GAAK,KACbD,EAAE8B,EAAG7B,GAAG,GAAK,KACR+B,EAAI,EAAGA,EAAI/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyCC,OAAQ8B,IAClF/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,WAAqF/H,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,cACzGD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,IACb/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,WAAqF/H,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,cACxGD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,SAGrBhC,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YACjCD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAGxChG,KAAKV,MAAM2I,WAAWjI,KAAKV,MAAM2E,MAAQjE,KAAKnB,MAAMuH,QAASpG,KAAKnB,MAAMuH,QAAQ,GAAMpG,KAAKV,MAAMuD,UAAWkD,EAAG6B,EAAW5H,KAAKV,MAAMpC,WACrI8C,KAAKP,SAAS,CAAEiI,UAAY,M,wCAIpB,IAAIC,EAAM,GACVA,EAAI,GAAK3H,KAAKV,MAAM0I,SAAS,GAC7B,IAAK,IAAIhC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IAC3C2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2ChG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAEvEhG,KAAKP,SAAS,CAAE2G,QAAUuB,EAAKD,UAAY,M,wCAK3C,IAAIE,EAAY,EACZ5B,EAAI,EACR,IAAKA,EAAI,EAAGA,EAAIhG,KAAKV,MAAM2D,wBAAwBgD,OAAQD,IACvD,IAAsD,IAAjDhG,KAAKV,MAAMwI,8BAA8B9B,IAAgE,cAAhDhG,KAAKV,MAAMwI,8BAA8B9B,GACnG,IAAI,IAAI+B,EAAI,EAAGA,EAAI/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqDC,OAAQ8B,IACxE/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqD+B,GAArD,gBAA6E/H,KAAKV,MAAMwI,8BAA8B9B,KACtH4B,EAAY5H,KAAKV,MAAMwI,8BAA8B9B,IAKrEhG,KAAKV,MAAM4I,YAAYlI,KAAKV,MAAMuD,UAAW7C,KAAKV,MAAM0I,SAAS,GAAIhI,KAAKV,MAAMpC,UAAW0K,GAC3F5H,KAAKP,SAAS,CAAEiI,UAAY,M,kCAGnB1F,GACThC,KAAKV,MAAM6I,YAAYnI,KAAKV,MAAMuD,UAAWb,EAAQhC,KAAKV,MAAM0I,SAAS,M,0CAIzEhI,KAAKoI,oB,yCAGUtI,EAAWC,GAC1B,GAAID,EAAUkI,WAAahI,KAAKV,MAAM0I,SAAU,CAC5C,IAAIL,EAAM,GACVA,EAAI,GAAK3H,KAAKV,MAAM0I,SAAS,GAC7B,IAAK,IAAIhC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IAC3C2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2ChG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAEvEhG,KAAKP,SAAS,CAAC2G,QAAUuB,O,+BAIvB3B,GAAI,IAAD,OAqCT,OAnCIhG,KAAKV,MAAMgE,eAAiBtD,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAM7C,wBAAIlF,IAAOkF,GAAG,4BAAQ/F,UAAY,gBAEdN,MAASK,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC5BgB,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZ7F,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,SAE9E,4BAAQmB,KAAQ,EAAGnB,OAAU,IAC/BK,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyCpF,KAAI,SAACC,GAAK,OAAO,4BAAQC,IAAOD,EAAE7D,GAAI2C,MAASkB,EAAEyH,UAAWzH,EAAEyH,eAG5G,QAA1CtI,KAAKV,MAAM8D,YAAY4C,GAAvB,SACI,wBAAIlF,IAAOkF,GAAG,2BACF3H,KAAO,WACP2I,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZuC,QAAWvI,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC9B7F,SAAY,SAACX,GACWA,EAAE0H,OAAOqB,QACT,EAAKF,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa,GACpD,EAAKkB,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa,OAI1F,wBAAIrG,IAAOkF,GAAG,2BAAO/F,UAAY,gBACrB5B,KAAO,OACPsB,MAASK,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC5BgB,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZ7F,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,a,+BAS9G,IAHM,IAAD,OACD6I,EAAM,GACNC,EAAO,GACFzC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IACd,IAAzBhG,KAAKnB,MAAM6I,UACXc,EAAIxC,GAAKhG,KAAK0I,SAAS1C,GAEmB,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,SACIwC,EAAIxC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC,2BAAO3H,KAAO,WAAWkK,QAAWvI,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,eAGxHwC,EAAIxC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA0ChG,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,aAEzF,IAAI2C,EAAQ,EACZ,IAAK3C,EAAE,EAAGA,EAAEhG,KAAKV,MAAMsJ,UAAU3C,OAAQD,IACK,IAAtChG,KAAKV,MAAMsJ,UAAU5C,GAArB,SACA2C,IACAF,EAAKzC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAMsJ,UAAU5C,GAArB,WACT,4BAAQrG,MAASK,KAAKV,MAAMsJ,UAAU5C,GAArB,YACTgB,WAAYhH,KAAKV,MAAMsJ,UAAU5C,GAArB,UACZ6C,UAAW7I,KAAKV,MAAM2E,MACtB7D,QAAW,SAACZ,GAAO+B,QAAQ7D,IAAI,YAAY,EAAKyK,YAAY3I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOC,aAAa,cAE1HnH,KAAKV,MAAMsJ,UAAU5C,GAArB,eAIvB,IAAI8C,EAAM,GAaV,OAZAA,EAAI,GAAK,wBAAIhI,IAAOd,KAAKV,MAAM2E,MACnB+C,WAAYhH,KAAKV,MAAM2E,MACvB8E,cAAiB,WAAQ,EAAKC,iBAC7BR,EAAKC,GAEW,IAAzBzI,KAAKnB,MAAM6I,YACXoB,EAAI,GAAK,wBAAIhI,IAAOd,KAAKV,MAAM2E,OAAO,wBAAInD,IAAO,EAAGmI,QAAWjJ,KAAKV,MAAM8D,YAAY6C,OAAS0C,GAC/E,4BAAQvI,QAAW,WAAO,EAAK8I,kBAA/B,mFACA,4BAAQ9I,QAAW,WAAO,EAAKgI,oBAA/B,yFACA,4BAAQhI,QAAW,WAAO,EAAK+I,oBAA/B,uDAGb,oCAAGL,O,GA1MKzI,IAAMC,WC0Jd8I,G,2MAzJXvK,MAAQ,CACJ6I,UAAY,EACZtB,QAAU,I,8EAIVpG,KAAKP,SAAS,CAAEiI,UAAY,M,mCAGlB1B,EAAGjI,GACb,IAAI4J,EAAM3H,KAAKnB,MAAMuH,QACrBuB,EAAI3B,GAAKjI,EACTiC,KAAKP,SAAS,CAAC2G,QAAUuB,M,sCAIzB,IAAI5B,EAAI,GACJ6B,EAAY,EACZ5B,EAAI,EACJ6B,EAAK,EACT,IAAK7B,EAAI,EAAGA,EAAIhG,KAAKV,MAAM2D,wBAAwBgD,OAAQD,IACvD,IAAsD,IAAjDhG,KAAKV,MAAMwI,8BAA8B9B,IAAgE,cAAhDhG,KAAKV,MAAMwI,8BAA8B9B,GAAqB,CACxHD,EAAE8B,GAAM,GACR9B,EAAE8B,GAAI,GAAK7H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,WACXD,EAAE8B,GAAI,GAAK,KACX,IAAI,IAAIE,EAAI,EAAGA,EAAI/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqDC,OAAQ8B,IACxE/H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqD+B,GAArD,gBAA6E/H,KAAKV,MAAMwI,8BAA8B9B,KACtHD,EAAE8B,GAAI,GAAK7H,KAAKV,MAAM2D,wBAAwB+C,GAAnC,YAAqD+B,GAArD,SACXH,EAAY5H,KAAKV,MAAMwI,8BAA8B9B,IAG7DD,EAAE8B,GAAI,GAAK,MACXA,IAIR,IAAK7B,EAAE,EAAGA,EAAGhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IAIxC,GAHAD,EAAE8B,EAAG7B,GAAK,GACVD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM8D,YAAY4C,GAAvB,WACbD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM8D,YAAY4C,GAAvB,SACThG,KAAKV,MAAMgE,eAAiBtD,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAGrD,IAFAD,EAAE8B,EAAG7B,GAAG,GAAK,KACbD,EAAE8B,EAAG7B,GAAG,GAAK,KACR+B,EAAI,EAAGA,EAAI/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyCC,OAAQ8B,IAClF/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,WAAqF/H,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,cACzGD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,IACb/H,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,WAAqF/H,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,cACxGD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC+B,GAAlE,SAGrBhC,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YACjCD,EAAE8B,EAAG7B,GAAG,GAAKhG,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAGxChG,KAAKV,MAAM2I,WAAWjI,KAAKV,MAAM2E,MAAQjE,KAAKnB,MAAMuH,QAASpG,KAAKnB,MAAMuH,QAAQ,GAAMpG,KAAKV,MAAMuD,UAAWkD,EAAG6B,EAAW5H,KAAKV,MAAMpC,WACrI8C,KAAKP,SAAS,CAAEiI,UAAY,M,wCAI5B,IAAIC,EAAM,GACVA,EAAI,GAAK3H,KAAKV,MAAM0I,SAAS,GAC7B,IAAK,IAAIhC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IACK,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,UAA6F,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,eAAqHqD,IAAjErJ,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAG7H2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2ChG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAFnE2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2C,EAIvDhG,KAAKP,SAAS,CAAE2G,QAAUuB,EAAKD,UAAY,M,kCAGlC1F,GACThC,KAAKV,MAAM6I,YAAYnI,KAAKV,MAAMuD,UAAWb,EAAQhC,KAAKV,MAAM0I,SAAS,M,0CAIzEhI,KAAKoI,oB,yCAGUtI,EAAWC,GAC1B,GAAID,EAAUkI,WAAahI,KAAKV,MAAM0I,SAAU,CAC5C,IAAIL,EAAM,GACVA,EAAI,GAAK3H,KAAKV,MAAM0I,SAAS,GAC7B,IAAK,IAAIhC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IACK,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,UAA6F,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,eAAsHqD,IAAjErJ,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAG9H2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2ChG,KAAKV,MAAM0I,SAAShI,KAAKV,MAAM8D,YAAY4C,GAAvB,YAFnE2B,EAAI3H,KAAKV,MAAM8D,YAAY4C,GAAvB,YAA2C,EAIvDhG,KAAKP,SAAS,CAAC2G,QAAUuB,O,+BAIvB3B,GAAI,IAAD,OAyBT,OAvBIhG,KAAKV,MAAMgE,eAAiBtD,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC7C,wBAAIlF,IAAOkF,GAAG,4BAAQ/F,UAAY,gBACdN,MAASK,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC5BgB,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZ7F,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,SAE9E,4BAAQmB,KAAQ,EAAGnB,OAAU,IAChCK,KAAKV,MAAMgE,cAActD,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyCpF,KAAI,SAACC,GAAK,OAAO,4BAASC,IAAOD,EAAE7D,GAAI2C,MAASkB,EAAEyH,UAAWzH,EAAEyH,eAG5G,QAA1CtI,KAAKV,MAAM8D,YAAY4C,GAAvB,SACI,wBAAIlF,IAAOkF,GAAG,2BACE3H,KAAO,WACP2I,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZ7F,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOqB,aAGlG,wBAAIzH,IAAOkF,GAAG,2BAAO/F,UAAY,gBACjB5B,KAAO,OACPsB,MAASK,KAAKnB,MAAMuH,QAAQpG,KAAKV,MAAM8D,YAAY4C,GAAvB,YAC5BgB,WAAYhH,KAAKV,MAAM8D,YAAY4C,GAAvB,WACZ7F,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,a,+BAQlH,IAHM,IAAD,OACD6I,EAAM,GACNC,EAAO,GACFzC,EAAE,EAAGA,EAAEhG,KAAKV,MAAM8D,YAAY6C,OAAQD,IACd,IAAzBhG,KAAKnB,MAAM6I,UACXc,EAAIxC,GAAKhG,KAAK0I,SAAS1C,GAEuB,QAA1ChG,KAAKV,MAAM8D,YAAY4C,GAAvB,SAAiDwC,EAAIxC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAM8D,YAAY4C,GAAvB,YAAyC,2BAAO3H,KAAO,WAAWiL,UAAQ,KAC9Id,EAAIxC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAM8D,YAAY4C,GAAvB,aAEjC,IAAI2C,EAAQ,EACZ,IAAK3C,EAAE,EAAGA,EAAEhG,KAAKV,MAAMsJ,UAAU3C,OAAQD,IACK,IAAtChG,KAAKV,MAAMsJ,UAAU5C,GAArB,SACA2C,IACAF,EAAKzC,GAAK,wBAAIlF,IAAOd,KAAKV,MAAMsJ,UAAU5C,GAArB,WAAX,MAGlB,IAAI8C,EAAM,GAYV,OAXAA,EAAI,GAAK,wBAAIhI,IAAOd,KAAKV,MAAM2E,MACnB+C,YAAa,EACb+B,cAAiB,WAAQ,EAAKC,iBAC7BR,EAAKC,GAEW,IAAzBzI,KAAKnB,MAAM6I,YACXoB,EAAI,GAAK,4BAAI,wBAAIG,QAAWjJ,KAAKV,MAAM8D,YAAY6C,OAAS0C,GAC5C,4BAAQvI,QAAW,WAAO,EAAK8I,kBAA/B,mFACA,4BAAQ9I,QAAW,WAAO,EAAKgI,oBAA/B,4FAGb,oCAAGU,O,GAtJQzI,IAAMC,W,SCAXiJ,G,2MAEjB1K,MAAQ,CACJ2K,OAAS,GACTC,QAAU,I,yEAGJxF,EAAOyF,GACb,IAAIC,EAAM,EACE,IAARD,GACAA,EAAM,EACNC,EAAM,GAEND,EAAM,EAGV,IAAI/B,EAAG,aAAO3H,KAAKnB,MAAM2K,QACzB7B,EAAI1D,GAAJ,QAAwByF,EACxB,IAAIE,EAAS,aAAO5J,KAAKnB,MAAM4K,SAC/BG,EAAU3F,GAAS0F,EACnB3J,KAAKP,SAAS,CAAC+J,OAAS7B,EAAK8B,QAAUG,M,mCAIvC5J,KAAKV,MAAMuK,oB,mCAGD9B,EAAG/B,EAAGjI,GAChBwD,QAAQ7D,IAAI,2BAA2BqK,EAAG,IAAI/B,EAAE,MAAMjI,GACtD,IAAI4J,EAAM3H,KAAKnB,MAAM2K,OACrB7B,EAAII,GAAG/B,GAAKjI,EACZiC,KAAKP,SAAS,CAAC+J,OAAS7B,M,kCAIxBpG,QAAQ7D,IAAI,oBACZ6D,QAAQ7D,IAAIsC,KAAKnB,MAAM2K,QAIvB,IAHA,IAAIzB,EAAI,EACJ+B,EAAK,GACLC,EAAQ,GACH/D,EAAI,EAAGA,EAAIhG,KAAKnB,MAAM2K,OAAOvD,OAAQD,IACF,IAApChG,KAAKnB,MAAM2K,OAAOxD,GAAlB,UACA8D,EAAG/B,GAAK/H,KAAKnB,MAAM2K,OAAOxD,GAAlB,GACR+B,KAIR,IAAS/B,EAAI,EAAGA,EAAIhG,KAAKnB,MAAM2K,OAAOvD,OAAQD,IAC1C,GAAyC,IAApChG,KAAKnB,MAAM2K,OAAOxD,GAAlB,QAAsC,CACvC+D,EAAM/D,GAAK,GACX,IAAIgE,EAAI,EACR,IAAKjC,EAAI,EAAGA,EAAI/H,KAAKV,MAAMsE,UAAUqC,OAAQ8B,IACzC,GAAuC,IAAnC/H,KAAKV,MAAMsE,UAAUmE,GAArB,IACA,GAAI/H,KAAKV,MAAMwE,SAAS9D,KAAKV,MAAMsE,UAAUmE,GAArB,YACpB,IAAK,IAAIkC,EAAI,EAAGA,EAAIjK,KAAKV,MAAMwE,SAAS9D,KAAKV,MAAMsE,UAAUmE,GAArB,YAAuC9B,OAAQgE,IAC9EjK,KAAKV,MAAMwE,SAAS9D,KAAKV,MAAMsE,UAAUmE,GAArB,YAAuCkC,GAA3D,WAA8EjK,KAAKnB,MAAM2K,OAAOxD,GAAGhG,KAAKV,MAAMsE,UAAUmE,GAArB,cACpGxG,QAAQ7D,IAAI,OAAQsM,GACpBD,EAAM/D,GAAGgE,GAAK,GACdzI,QAAQ7D,IAAIqM,GACbA,EAAM/D,GAAGgE,GAAG,GAAKhK,KAAKV,MAAMsE,UAAUmE,GAArB,WACjBgC,EAAM/D,GAAGgE,GAAG,GAAKhK,KAAKV,MAAMwE,SAAS9D,KAAKV,MAAMsE,UAAUmE,GAArB,YAAuCkC,GAA3D,GACjBD,UAKPzI,QAAQ7D,IAAI,SAAUsM,GACtBD,EAAM/D,GAAGgE,GAAK,GACdzI,QAAQ7D,IAAIqM,GACZA,EAAM/D,GAAGgE,GAAG,GAAKhK,KAAKV,MAAMsE,UAAUmE,GAArB,WACjBgC,EAAM/D,GAAGgE,GAAG,GAAKhK,KAAKnB,MAAM2K,OAAOxD,GAAGhG,KAAKV,MAAMsE,UAAUmE,GAArB,YACtCiC,IAU5BzI,QAAQ7D,IAAI,cACZ6D,QAAQ7D,IAAIqM,GACZxI,QAAQ7D,IAAIsC,KAAKV,MAAMuD,WACvBtB,QAAQ7D,IAAIsC,KAAKV,MAAMmF,QACvBlD,QAAQ7D,IAAKsC,KAAKV,MAAMyF,OAChB/E,KAAKV,MAAM4K,WAAWlK,KAAKV,MAAMuD,UAAU7C,KAAKV,MAAMmF,OAAQqF,EAAIC,EAAO/J,KAAKV,MAAMyF,S,0CAKpF,IADA,IAAI4C,EAAM,GACF3B,EAAI,EAAGA,EAAGhG,KAAKV,MAAMuE,QAAQoC,OAAQD,IACzC2B,EAAI3B,GAAK,EAErBzE,QAAQ7D,IAAI,qBACZ6D,QAAQ7D,IAAIiK,GACJ3H,KAAKP,SAAS,CAAC+J,OAASxJ,KAAKV,MAAMuE,QAAS4F,QAAU9B,M,+BAGhD,IAAD,OACLpG,QAAQ7D,IAAI,gBACZ6D,QAAQ7D,IAAIsC,KAAKnB,OACjB0C,QAAQ7D,IAAIsC,KAAKV,OACjB,IAAIkJ,EACA2B,EAIAC,EAHAC,EAAiB,CAAEC,MAAQ,QAASC,OAAUvK,KAAKV,MAAMkL,WAAa,GAAKC,SAAW,UACtFC,EAAM1K,KAAKV,MAAMsE,UAAUhD,KAAI,SAACC,EAAEoD,GAAW,GAAmB,KAAfpD,EAAEyH,SAAiB,OAAO,wBAAIxH,IAAOmD,GAAQpD,EAAEyH,aAChGqC,EAAM,KAmFV,OAhFIA,EAD4C,qBAArC3K,KAAKV,MAAMuE,QAAQ,GAAnB,QACD,wBAAI+G,MAAS,CAACL,OAAS,QAASzJ,KAAQ,GAAxC,IAA4C,wBAAIA,KAAQ,IAAxD,IAAkE4J,EAAlE,KAEA,wBAAI5J,KAAQ,GAAZ,IAAiB4J,EAAjB,KAEVN,EAAMpK,KAAKnB,MAAM2K,OAAO5I,KAAI,SAACC,EAAGoD,GAC5B,IAAI+B,EAAI,EACJ6E,EAAK,GAF6B,WAG5BZ,GACN,GAAU,YAANA,EACAY,EAAG7E,GAAK,wBAAIlF,IAAOkF,GAAX,KAAgB,2BAAO3H,KAAO,WAAWI,KAAO,aAAakB,MAASsE,EAAOsE,QAAW1H,EAAEoJ,GAAI9J,SAAY,SAACX,GAAO,EAAKsL,UAAU7G,EAAOpD,EAAEoJ,aAC9I,GAAU,OAANA,EACR,IAAQlC,EAAI,EAAGA,EAAI,EAAKzI,MAAMsE,UAAUqC,OAAQ8B,IACxC,EAAKzI,MAAMsE,UAAUmE,GAArB,aAA0CkC,IACE,QAAxC,EAAK3K,MAAMsE,UAAUmE,GAArB,SACkC,IAA9B,EAAKlJ,MAAM4K,QAAQxF,GACnB4G,EAAG7E,GAAK,wBAAIlF,IAAOkF,GACH,2BAAO3H,KAAO,WACA2I,WAAY,EAAK1H,MAAMsE,UAAUmE,GAArB,WACZQ,QAAW1H,EAAEoJ,MAI3CY,EAAG7E,GAAK,wBAAIlF,IAAOkF,GACH,2BAAO3H,KAAO,WACA2I,WAAY,EAAK1H,MAAMsE,UAAUmE,GAArB,WACZgD,aAAc9G,EACdsE,QAAW1H,EAAEoJ,GACb9J,SAAY,SAACX,GAAO+B,QAAQ7D,IAAI,uBAC5B8B,EAAE0H,OAAOqB,QACT,EAAKF,aAAa7I,EAAE0H,OAAOC,aAAa,cAAe3H,EAAE0H,OAAOC,aAAa,YAAa,GACzF,EAAKkB,aAAa7I,EAAE0H,OAAOC,aAAa,cAAe3H,EAAE0H,OAAOC,aAAa,YAAa,OAK/F,IAA9B,EAAKtI,MAAM4K,QAAQxF,IAAmD,IAAnC,EAAK3E,MAAMsE,UAAUmE,GAArB,IACnC8C,EAAG7E,GAAK,wBAAIlF,IAAOkF,GAAX,KAAiBnF,EAAEoJ,GAAnB,OAE5C1I,QAAQ7D,IAAI,oBACZ6D,QAAQ7D,IAAI,EAAK4B,MAAMsE,UAAUoC,GAArB,YACZzE,QAAQ7D,IAAI,EAAK4B,MAAMwE,SAAS,EAAKxE,MAAMsE,UAAUoC,GAArB,aACQ,EAAK1G,MAAMwE,SAAS,EAAKxE,MAAMsE,UAAUmE,GAArB,YACpB8C,EAAG7E,GAAK,wBAAIlF,IAAOkF,GACP,4BACQrG,MAASkB,EAAEoJ,GACXjD,WAAY,EAAK1H,MAAMsE,UAAUmE,GAArB,WACZgD,aAAc9G,EACd9D,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,cAAe3H,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,SAE3H,4BAAQmB,KAAQ,EAAGnB,OAAU,IAC5B,EAAKL,MAAMwE,SAAS,EAAKxE,MAAMsE,UAAUmE,GAArB,YAAuCnH,KAAI,SAACC,GAAK,OAAO,4BAAQC,IAAOD,EAAE7D,GAAI2C,MAASkB,EAAEyH,UAAWzH,EAAEyH,eAI1IuC,EAAG7E,GAAK,wBAAIlF,IAAOkF,GACP,2BAAO3H,KAAO,OACNsB,MAASkB,EAAEoJ,GACXjD,WAAY,EAAK1H,MAAMsE,UAAUmE,GAArB,WACZgD,aAAc9G,EACd9D,SAAY,SAACX,GAAO,EAAK6I,aAAa7I,EAAE0H,OAAOC,aAAa,cAAe3H,EAAE0H,OAAOC,aAAa,YAAa3H,EAAE0H,OAAOvH,aASnKqG,KA7DJ,IAAM,IAAIiE,KAAKpJ,EAAE,CAAC,IAIFkH,EAJC,EAAPkC,GA+DV,OAAO,wBAAInJ,IAAOmD,GAAX,IAAoB4G,EAApB,QAEXrC,EAAM,2BAAOvI,UAAU,iBACd0K,EACAP,GAETD,EAAQ,2BACE,4BAAQ/J,QAAW,WAAO,EAAK4K,cAA/B,oDACA,4BAAQ5K,QAAW,WAAO,EAAK6K,eAA/B,2DAEF,oCACI,yBAAKhL,UAAY,YAAY2K,MAASP,GAAiB7B,GACvD,6BAAM2B,Q,GAhMa9J,IAAMC,W,mOCAxB4K,G,2MAEjBrM,MAAQ,CACJ2K,OAAS,I,yEAGFvF,EAAOyF,GACd,IAAI/B,E,2VAAG,IAAO3H,KAAKnB,MAAM2K,QACzB7B,EAAI1D,GAASyF,EACb1J,KAAKP,SAAS,CAAC+J,OAAS7B,M,mCAIxB3H,KAAKV,MAAMuK,oB,kCAIXtI,QAAQ7D,IAAI,uBACZ6D,QAAQ7D,IAAIsC,KAAKnB,MAAM2K,U,0CAIvBxJ,KAAKP,SAAS,CAAC+J,OAASxJ,KAAKV,MAAMuE,Y,+BAG7B,IACFwG,EADC,OAED7B,EAAM,GACNT,EAAI,EAER,IAAK,IAAI/B,KADTqE,EAAiB,CAAEC,MAAQ,QAASC,OAAS,QAASE,SAAW,WACnDzK,KAAKnB,MAAM2K,OACrBhB,EAAIT,GAAK,2BACG,mCAAS/H,KAAKV,MAAMsE,UAAUoC,GAA9B,KACA,2BAAO3H,KAAK,WAAW2I,WAAYhB,EAAGrG,MAASK,KAAKnB,MAAM2K,OAAOxD,GAAI7F,SAAW,SAACX,GAAO,EAAKsL,UAAUtL,EAAE0H,OAAOC,aAAa,YAAY3H,EAAE0H,OAAOvH,WAE9JoI,IAMJ,OAJAS,EAAIT,GAAK,2BACG,4BAAQ3H,QAAW,WAAO,EAAK4K,cAA/B,oDACA,4BAAQ5K,QAAW,WAAO,EAAK6K,eAA/B,2DAEJ,oCACI,yBAAKhL,UAAY,YAAY2K,MAASP,GAAiB7B,Q,GA1ChCnI,IAAMC,W,mOCE5BiJ,G,2MAEjB1K,MAAQ,CACJ2K,OAAS,I,yEAGFvF,EAAOyF,GACd,IAAI/B,E,2VAAG,IAAO3H,KAAKnB,MAAM2K,QACzB7B,EAAI1D,GAASyF,EACb1J,KAAKP,SAAS,CAAC+J,OAAS7B,M,mCAIxB3H,KAAKV,MAAMuK,oB,kCAIXtI,QAAQ7D,IAAI,mBACZ6D,QAAQ7D,IAAIsC,KAAKnB,MAAM2K,U,0CAII,IAAvBxJ,KAAKV,MAAMmE,SACXzD,KAAKP,SAAS,CAAC+J,OAASxJ,KAAKV,MAAMuE,Y,+BAIjC,IAAD,OACDsH,EAAa,GACb3C,EAAM,GACV,GAA2B,IAAvBxI,KAAKV,MAAMmE,QACX0H,EAAa,CAAEb,MAAQ,QACnBC,OAAS,QACTa,IAAMrM,OAAOsM,YAAc,EAAI,GAC/BC,KAAQvM,OAAOwM,WAAa,EAAG,KAEnC/C,EAAM,kBAAC,GAAD,CAAe5E,UAAa5D,KAAKV,MAAMsE,UACzBC,QAAW7D,KAAKV,MAAMuE,QACtBgG,gBAAmB7J,KAAKV,MAAMuK,uBAEtD,GAA2B,IAAvB7J,KAAKV,MAAMmE,QAAe,CAC1B,IAAI+H,EAAsC,GAA5BxL,KAAKV,MAAMuE,QAAQoC,OAC5BlH,OAAOsM,aAAgBG,EAAU,IAClCA,EAAUzM,OAAOsM,YAAc,IAE/BG,GAAoB,IACxBL,EAAa,CAAEb,MAAQ,QACXC,OAASiB,EACTJ,IAAMrM,OAAOsM,YAAc,GAAKG,EAAQ,KAAK,EAC7CF,KAAQvM,OAAOwM,WAAa,EAAG,KAE3C/C,EAAM,kBAAC,GAAD,CAAYzD,MAAS/E,KAAKV,MAAMiE,MACpBK,UAAa5D,KAAKV,MAAMsE,UACxBC,QAAW7D,KAAKV,MAAMuE,QACtBC,SAAY9D,KAAKV,MAAMwE,SACvB+F,gBAAmB7J,KAAKV,MAAMuK,gBAC9BW,WAAcgB,EACd/G,OAAUzE,KAAKV,MAAMkE,OACrB0G,WAAclK,KAAKV,MAAM4K,WACzBrH,UAAa7C,KAAKV,MAAMuD,YAE9C,OAAQ,wCAAG,yBAAK7F,GAAG,aAAa4N,MAASO,GACzB,yBAAKP,MAAS,CAACL,OAAS,SAAS,0BAAMvN,GAAG,cAAcoD,QAAW,WAAK,EAAK6K,eAA5C,MAChCzC,GAEL,yBAAKxL,GAAG,iB,GAjEWqD,IAAMC,WCkG9BmL,GAhGF,SAAC,GACoG,IADnGxI,EACkG,EADlGA,wBAAyBC,EACyE,EADzEA,gCAAiCE,EACwC,EADxCA,YAAaC,EAC2B,EAD3BA,UAAWC,EACgB,EADhBA,cAAesD,EACC,EADDA,UAAW8E,EACV,EADUA,aAAcvI,EACxB,EADwBA,WAAYuE,EACpC,EADoCA,UAAWO,EAC/C,EAD+CA,WAAYE,EAC3D,EAD2DA,YAAawD,EACxE,EADwEA,UAAW5H,EACnF,EADmFA,QAASR,EAC5F,EAD4FA,MAAOE,EACnG,EADmGA,QAASC,EAC5G,EAD4GA,QAC7MC,EAAiG,EAAjGA,cAAeC,EAAkF,EAAlFA,UAAWC,EAAuE,EAAvEA,QAASC,EAA8D,EAA9DA,SAAU+F,EAAoD,EAApDA,gBAAiBrG,EAAmC,EAAnCA,OAAQ0G,EAA2B,EAA3BA,WAAYhN,EAAe,EAAfA,UAE1F0O,EAAoBzI,EAAWvC,KAAI,SAACC,EAAGoD,GAAY,GAAIpD,EAAEgL,OAAQ,OAAO,wBAAI/K,IAAO,IAAImD,OAEvF6H,EAAc1I,EAAYxC,KAAI,SAACC,EAAGoD,GAClC,OAAO,wBAAInD,IAAOmD,GAAQpD,EAAEyH,aAG5ByD,EAAY1I,EAAUzC,KAAI,SAACC,EAAGoD,GAC9B,OAAO,kBAAC,GAAD,CAAUb,YAAaA,EACbE,cAAeA,EACfsF,UAAWzF,EACX6E,SAAUnH,EACVoD,MAAOA,EACPyH,aAAcA,EACdhE,UAAWA,EACX7E,UAAW+D,EACX3D,wBAAyBA,EACzB6E,8BAA+B5E,EAC/B+E,WAAYA,EACZE,YAAaA,EACbD,YAAayD,EACbzO,UAAWA,EACX6G,QAASA,EACTR,MAAOA,EACPE,QAASA,EACTC,QAASA,EACTC,cAAeA,EACfC,UAAWA,EACXC,QAASA,OAmC1BmI,EAAK7I,EAAWvC,KAAI,SAACC,EAAGoD,GACxB,OAAKpD,EAAEgL,OACA,KADe,4BAAQ/K,IAAOmD,EAAOtE,MAASkB,EAAEoL,aAAcpL,EAAEqL,gBAqB3E,OACI,6BACIF,EAtDC5I,EAAY6C,OAAS,EACf,2BAAOhG,UAAU,iBAChB,+BACI,wBAAIa,IAAM,MACLgL,EACAF,GAEL,kBAAC,GAAD,CAAaxI,YAAeA,EAChBE,cAAiBA,EACjBsF,UAAazF,EACb6E,SAAY,GACZ/D,OAAU,EACVhB,wBAAyBA,EACzB6E,8BAA+B5E,EAC/BwI,aAAgBA,EAChBhE,UAAaA,EACb7E,UAAa+D,EACbqB,WAAcA,EACdE,YAAeA,EACfD,YAAeyD,EACfzO,UAAaA,IAExB6O,IAKN,GAQE,WACb,GAAgB,IAAZhI,EACA,OAAO,kBAAC,GAAD,CAAWR,MAASA,EACXC,OAAUA,EACVC,QAAWA,EACXC,QAAWA,EACXC,cAAiBA,EACjBC,UAAaA,EACbC,QAAWA,EACXC,SAAYA,EACZ+F,gBAAmBA,EACnBK,WAAcA,EACdrH,UAAa+D,IAS7BuF,KC1FNC,G,4LAEEpM,KAAKV,MAAM+M,aAAarM,KAAKV,MAAMjC,QACnC,IAAIiP,EAASvN,OAAOC,eAAeuN,QAAQ,WACvCD,GAAQtM,KAAKV,MAAMiH,eAAe+F,EAAQtM,KAAKV,MAAMjC,OAAQ2C,KAAKV,MAAMpC,a,+BAI5E,OAAO,6BACC,kBAAC,GAAD,CAAgBG,OAAU2C,KAAKV,MAAMjC,OACrBH,UAAa8C,KAAKV,MAAMpC,UACxBoJ,aAAgBtG,KAAKV,MAAMkN,SAASxJ,aACpCuD,eAAkBvG,KAAKV,MAAMiH,iBAC7C,kBAAC,GAAD,CAAoBtD,wBAA2BjD,KAAKV,MAAMkN,SAASvJ,wBAC/C0D,aAAgB3G,KAAKV,MAAMkN,SAAStJ,gCACpC0D,UAAa5G,KAAKV,MAAMkN,SAAS3J,UACjC3F,UAAa8C,KAAKV,MAAMpC,UACxB2J,0BAA6B7G,KAAKV,MAAMuH,4BAC5D,kBAAC,GAAD,CAAQzD,YAAepD,KAAKV,MAAMkN,SAASpJ,YACnCC,UAAarD,KAAKV,MAAMkN,SAASnJ,UACjCC,cAAiBtD,KAAKV,MAAMkN,SAASlJ,cACrCsD,UAAa5G,KAAKV,MAAMkN,SAAS3J,UACjC6I,aAAgB1L,KAAKV,MAAMkN,SAAS1J,aACpCG,wBAA2BjD,KAAKV,MAAMkN,SAASvJ,wBAC/CC,gCAAmClD,KAAKV,MAAMkN,SAAStJ,gCACvDC,WAAcnD,KAAKV,MAAMkN,SAASrJ,WAClCY,QAAW/D,KAAKV,MAAMkN,SAASzI,QAC/BR,MAASvD,KAAKV,MAAMkN,SAASjJ,MAC7BE,QAAWzD,KAAKV,MAAMkN,SAAS/I,QAC/BC,QAAW1D,KAAKV,MAAMkN,SAAS9I,QAC/BC,cAAiB3D,KAAKV,MAAMkN,SAAS7I,cACrCC,UAAa5D,KAAKV,MAAMkN,SAAS5I,UACjCC,QAAW7D,KAAKV,MAAMkN,SAAS3I,QAC/BC,SAAY9D,KAAKV,MAAMkN,SAAS1I,SAChCN,OAAUxD,KAAKV,MAAMkN,SAAShJ,OAC9BkE,UAAa1H,KAAKV,MAAMoI,UACxBO,WAAcjI,KAAKV,MAAM2I,WACzBE,YAAenI,KAAKV,MAAMmN,YAC1Bd,UAAa3L,KAAKV,MAAMqM,UACxBzO,UAAa8C,KAAKV,MAAMpC,UACxB2M,gBAAmB7J,KAAKV,MAAMuK,gBAC9BK,WAAclK,KAAKV,MAAM4K,kB,GAzCjB7J,IAAMC,WAuDvBC,gBARO,SAAC1B,GACnB,MAAO,CACH2N,SAAW3N,EAAM2N,SACjBnP,OAASwB,EAAM2B,QAAQnD,OACvBH,UAAY2B,EAAM2B,QAAQtD,aAIM,CAACuP,YTqId,SAACjL,EAAQQ,EAAQN,GAAjB,8CAA4B,WAAO9D,GAAP,mBAAAiD,EAAA,sEAC/BO,EAA4BI,EAAQQ,GADL,YAChDlE,EADgD,4BAGpB,IAAvBA,EAASC,KAAK,GAH6B,gBAI3CH,EAAS4G,GAAgBxC,EACAlE,EAASC,KAAK,GACdD,EAASC,KAAT,SACAD,EAASC,KAAT,OACAD,EAASC,KAAT,WACA,GACD2D,EACA,EACA5D,EAASC,KAAT,aAZmB,0BAepB,IAAvBD,EAASC,KAAK,GAf6B,iBAgB3CH,EAAS4G,GAAgBxC,EACAlE,EAASC,KAAK,GACdD,EAASC,KAAT,SACA,GACD,GACA,GACA2D,EACA,EACA,KAxBmB,yCA2BrBN,EAA2BI,EAAQQ,GA3Bd,eA2BvC0K,EA3BuC,iBA4BrBtL,EAA0BtD,EAASC,KAAT,KAAuByD,EAAQQ,EAAQN,GA5B5C,QA6BlB,OADrBiL,EA5BuC,QA6B7BC,QAAuC,MAArBF,EAAUE,SACtDrL,QAAQ7D,IAAI,oBACZ6D,QAAQ7D,IAAIiP,EAAU5O,KAAV,MACZwD,QAAQ7D,IAAIgP,EAAU3O,MAENH,EAAS4G,GAAgBxC,EACDlE,EAASC,KAAK,GACdD,EAASC,KAAT,SACA2O,EAAU3O,KACV4O,EAAU5O,KAAV,KACA4O,EAAU5O,KAAV,MACA2D,EACA,EACA,MA1Ce,4CAA5B,uDSrI2B6E,eTuExB,SAAC/E,EAAQvD,EAAKoB,GAAd,8CAAwB,WAAOzB,GAAP,iBAAAiD,EAAA,6DAClDjD,EAlGqC,CAACS,KAAOkE,EAAQf,OAkG1BA,IAC3BJ,EAAmCI,EAAQvD,GAAKJ,MAAK,SAACC,GAjG9B,IAAC+O,EAkGrBjP,GAlGqBiP,EAkGQ/O,EAASC,KAlGJ,CAACM,KAAOmE,EAAYqD,WAAagH,QAoGvEzL,EAA0BI,GAAQ3D,MAAK,SAACC,GAnGzB,IAAC8K,EAoGZhL,GApGYgL,EAoGQ9K,EAASC,KApGF,CAACM,KAAOoE,EAAWqD,KAAO8C,QA8FP,SAQ7BxH,EAA2BI,EAAQ,IARN,cAQ9C1D,EAR8C,SAU9CF,EAASwG,EAAetG,EAASC,OAVa,SAY5BqD,EAAyBI,GAAS,EAAGnC,GAZT,QAY9CsN,EAZ8C,SAc9C/O,EAAS0G,EAAaqI,EAAU5O,OAdc,4CAAxB,uDSvEwCsO,aTiE1C,SAACpO,GAAD,OAAS,SAACL,GAClCwD,EAAwBnD,GAAKJ,MAAM,SAACC,GAChCF,EA5F6B,CAACS,KAlCpB,oBAkCsCuH,OA4FpB9H,EAASC,YSnEuC8I,0BTyF3C,SAAC5C,EAAOC,EAAW4I,EAAOzN,GAA1B,8CAAoC,WAAOzB,GAAP,eAAAiD,EAAA,6DACzEjD,EAASoG,EAAwBC,EAAOC,IADiC,SAEpD9C,EAAyB0L,EAAO5I,EAAW7E,GAFS,QAErEvB,EAFqE,SAIrEF,EAAS0G,EAAaxG,EAASC,OAJsC,2CAApC,uDSzFsEgP,STiGvF,SAAC7I,EAAW4I,EAAOzN,GAAnB,8CAA6B,WAAOzB,GAAP,iBAAAiD,EAAA,sEAC5BO,EAA2B0L,EAAO,IADN,cAC7ChP,EAD6C,SAG7CF,EAASwG,EAAetG,EAASC,OAHY,SAK3BqD,EAAyB0L,EAAO5I,EAAW7E,GALhB,QAK7CsN,EAL6C,SAO7C/O,EAAS0G,EAAaqI,EAAU5O,OAPa,2CAA7B,uDSjGiG2J,UT4GhG,SAACvB,GAAD,OAAc,SAACvI,GACpCA,EAhI4B,CAACS,KAAOsE,EAAWuD,IAgIzBC,MS7G0G8B,WTgH1G,SAAC9B,EAAUC,EAAS4G,EAAOF,EAAO/G,EAAG6B,EAAW1K,GAAhD,8CAA8D,WAAOU,GAAP,eAAAiD,EAAA,sEAC/DO,EAA8B0L,EAAO/G,EAAGiH,GADuB,kDAG1D5L,EAAyB0L,EAAOlF,EAAW1K,GAHe,QAG5EyP,EAH4E,SAK5E/O,EAAS0G,EAAaqI,EAAU5O,OAL4C,2CAA9D,uDShHsH4N,UT2HtH,SAACnK,EAAQE,EAAQrC,EAAOuI,GAAxB,8CAAsC,WAAOhK,GAAP,eAAAiD,EAAA,sEACvCO,EAA8BI,EAAQE,GADC,kDAGlCN,EAAyBI,EAAQoG,EAAWvI,GAHV,QAGpDsN,EAHoD,SAKpD/O,EAAS0G,EAAaqI,EAAU5O,OALoB,2CAAtC,uDS1He8L,gBTqLV,kBAAM,SAACjM,GAClCA,EAvM0B,CAACS,KAlCZ,uBSmDuC6L,WTyLhC,SAAC1I,EAAQQ,EAAQ6C,EAASoI,EAAczH,GAAxC,8CAAmD,WAAO5H,GAAP,eAAAiD,EAAA,sEACpDO,EAA0BI,EAAQgE,EAAQX,EAASoI,EAAcjL,GADb,OACrElE,EADqE,OAEzEyD,QAAQ7D,IAAI,2BACZ6D,QAAQ7D,IAAII,EAASC,MACG,MAApBD,EAAS8O,QACThP,EAAS4G,GAAgB,GAAI,EAAG,GAAI,GAAI,GAAI,GAAI,EAAG,EAAG,KALe,2CAAnD,wDS1LXjE,CACwD6L,ICvDjEc,G,iLACQ,IAAD,OACL,OAA0B,IAAtBlN,KAAKV,MAAMjC,OACJ,KAEC,kBAAC,IAAD,KACI,kBAAC,EAAD,CAAWA,OAAU2C,KAAKV,MAAMjC,OAAQG,eAAkBwC,KAAKV,MAAM9B,eAAgBkD,iBAAoBV,KAAKV,MAAM6N,eACpH,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,MAClB,kBAAC,IAAD,CAAOA,KAAK,YAAYC,OAAQ,kBAAM,kBAAC,GAAsB,EAAKhO,e,GAR9De,IAAMC,WAuBnBC,gBARO,SAAC1B,GACnB,MAAO,CACHxB,OAASwB,EAAM2B,QAAQnD,OACvBG,eAAiBqB,EAAM2B,QAAQhD,eAC/B0B,eAAiBL,EAAM2B,QAAQtB,kBAIC,CAACiO,adiCb,kBAAM,SAACvP,GAC/BA,EAnBsC,CAACS,KA3C5B,cc4BAkC,CAAyC2M,ICzBlDK,GAAG,4LAED,IAAI7P,EAAMqB,OAAOC,eAAeuN,QAAQ,SACpCiB,EAAOzO,OAAOC,eAAeuN,QAAQ,YACrC7O,GAAQ8P,GAAMxN,KAAKV,MAAM7B,WAAWC,EAAK8P,KAJ5C,+BAQD,OAA0B,IAAtBxN,KAAKV,MAAMjC,OACJ,6BACH,kBAAE,EAAF,OAGG,6BACH,kBAAC,GAAD,WAdP,GAAkBgD,IAAMC,WA0BlBC,gBANO,SAAC1B,GACnB,MAAO,CACHxB,OAASwB,EAAM2B,QAAQnD,UAIS,CAACI,cAA1B8C,CAAuCgN,I,SC7BlDtQ,GAAe,CAEfwQ,eAAiB,CACX,CAACvM,WAAY,6FAAmBH,SAAS,KACzC,CAACG,WAAY,qEAAeH,SAAS,KACrC,CAACG,WAAY,mDAAYH,SAAS,OAuB7B2M,GAhBG,WAAoC,IAAnC7O,EAAkC,uDAA1B5B,GAAc6B,EAAY,uCACjD,OAAOA,EAAOT,MACV,IAjBM,QAqBF,OAHAQ,EAAM3B,UAAY4B,EAAOR,QACzBO,EAAM1B,aAAe2B,EAAOP,SAC5BM,EAAMoD,MAAQ,QACPpD,EACX,IArBO,SAyBC,OAHAA,EAAM3B,UAAY,GAClB2B,EAAM1B,aAAe,GACrB0B,EAAMoD,MAAQ,IACPpD,EACf,QAAU,OAAOA,I,mBCpBrB8O,GAAWC,aAAgB,CAACpN,QAAQ5B,EAAgBiP,KAAKH,GAAalB,SAAS7G,GAAiBmI,KAAKC,OAG1FC,GAFHC,aAAYN,GAAUO,aAAgBC,OCOnCC,GARD,WACV,OAAO,kBAAC,IAAD,KACC,kBAAC,IAAD,CAAUJ,MAAOA,IACb,kBAAC,GAAD,SCLhBK,IAASf,OAAQ,kBAAE,GAAF,MAAcgB,SAASC,eAAe,U","file":"static/js/main.3423008e.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n\tbaseURL: 'http://sdelka/php/'\r\n//\twithCredentials : true \r\n});\r\n\r\nexport const userAPI = {\r\n\tgetUsers : (ul, up) => { return instance.get('user_connect.php?userlogin='+ul+'&userpassword='+up) },\r\n\t\r\n\tgetUserRoles : (id) => { return instance.get('user_role.php?userid='+id)}\r\n}","import {userAPI} from './../API/apiuser';\r\n\r\nconst LOGIN = 'login';\r\nconst LOGOUT = 'logout';\r\nconst SETMENU = 'set_menu';\r\n\r\nlet initialState = {\r\n        userLogin : '',\r\n        userPassword : '',\r\n        userName : '',\r\n        userId : 0,\r\n        userAccess : 0,\r\n        userRoles :null,\r\n        selectMainMenu : []\r\n    }\r\n\r\nlet logUserReducer = (state = initialState, action) => {\r\n    switch(action.type){\r\n        case LOGIN : \r\n            window.sessionStorage.setItem('login', action.logname);\r\n            window.sessionStorage.setItem('password', action.password);\r\n            return  {\r\n                ...state, \r\n                userLogin : action.logname,\r\n                userPassword : action.password,\r\n                userId : action.userid,\r\n                userName : action.name,\r\n                ...state.selectMainMenu,\r\n                selectMainMenu : action.roles\r\n            }\r\n        case LOGOUT : \r\n            return {\r\n                ...state, \r\n                userPassword : '',\r\n                userId : 0\r\n            }\r\n        case SETMENU :\r\n            return {\r\n                ...state,\r\n                userSelectMenu : action.comp\r\n            }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport const setConnectAction = (log, pas, id, name_user, uroles) => ({type : LOGIN, logname : log, password: pas, userid: id, name: name_user, roles: uroles});\r\nexport const setDisconnectAction = () => ({type : LOGOUT});\r\nexport const setSelectMenu = (comp) => ({type : SETMENU, component: comp});\r\n\r\nexport const setConnect = (log,pas) => (dispatch) => { \r\n    userAPI.getUsers(log, pas).then((response) => {\r\n        if (response.data['resultCode'] === 1) {\r\n            alert(response.data['value']);\r\n        } else {\r\n            let uid = response.data['value'][0]['id'];\r\n            let uname = response.data['value'][0]['name_user'];\r\n            userAPI.getUserRoles(uid).then((response) => {\r\n                dispatch(setConnectAction( log, pas, uid, uname, response.data ));\r\n            })\r\n        }\r\n    })\r\n    \r\n}\r\n\r\nexport const setDisconect = () => (dispatch) => {\r\n    dispatch(setDisconnectAction())\r\n}\r\n\r\nexport default logUserReducer;","import React from 'react';\r\nimport {setConnect} from './../../Redux/loguserreducer';\r\nimport {connect} from 'react-redux';\r\n\r\nclass LoginContainer extends React.Component {\r\n    \r\n    state = {\r\n        login : this.props.userLogin, \r\n        password: this.props.userPassword\r\n    };\r\n\r\n    onLoginChange = (e) => { this.setState( { login : e.currentTarget.value } ) }\r\n\r\n    onPasswordChange = (e) => { this.setState({password: e.currentTarget.value}) }\r\n    \r\n    connectedUser = () => { this.props.setConnect(this.state.login, this.state.password) }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.userPassword !== this.props.userPassword) this.setState({password : this.props.userPassword})\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userId === 0) {\r\n        return (\r\n            <div className='sdelkamain'>\r\n                <input type=\"text\" \r\n                        placeholder=\"Enter your login\" \r\n                        value={ this.state.login } \r\n                        onChange={ this.onLoginChange }\r\n                        >\r\n                </input>\r\n                <input type=\"text\" \r\n                        placeholder=\"Enter your password\" \r\n                        value={ this.state.password }\r\n                        onChange={ this.onPasswordChange } \r\n                        >\r\n                </input>\r\n                    <button onClick={ this.connectedUser }>\r\n                            Вхід\r\n                    </button>\r\n            </div>\r\n        )}\r\n        else return null\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userLogin : state.loguser.userLogin,\r\n        userPassword : state.loguser.userPassword,\r\n        userId : state.loguser.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { setConnect })(LoginContainer);\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet MainMenus = ({ userId, selectMainMenu,  DisconectingUser}) => {\r\n    \r\n    let MainMenu = selectMainMenu.map((a) => {\r\n        return ( \r\n            <NavLink key={a.code_dov}  className='dovbutton' to={'/'+a.component} onClick = {() => window.sessionStorage.setItem('maincomp', '/'+a.component)}>\r\n                <span>    \r\n                    {a.name_dovid}\r\n                </span>\r\n            </NavLink> \r\n            )\r\n    });\r\n    \r\n    if (userId === 0) {\r\n        return null\r\n    } else {\r\n        return(\r\n            <div className='wraper'>\r\n                <div className='navdiv'>\r\n                    <div className='ribbon'>\r\n                        {MainMenu}\r\n                        <NavLink className='dovbutton' to={'/'} onClick={() => {\r\n                                                                        window.sessionStorage.removeItem('password'); \r\n                                                                        DisconectingUser()}}>\r\n                            <span> Вихід </span>\r\n                        </NavLink> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MainMenus;","import * as axios from 'axios';\r\n\r\nconst instance = axios.create({ baseURL: 'http://sdelka/php/' });\r\n\r\nexport const dovidnukAPI = {\r\n\tgetDovidnuk : (uid) => { return instance.get('dovidnuku.php?userid='+uid) },\r\n\r\n\tgetSelectionConditions : (dovid, uid) => { return instance.get('dovidnuk_user_select.php?userid='+uid+'&dovid='+dovid) },\r\n\r\n\tgetDovButtons : (dovid) => { return instance.get('dovidnuk_button.php?dovid='+dovid) },\r\n\r\n\tgetTableHeader : (dovid, butid) => {\r\nconsole.log(\"------API --  TableHeader-------\");\r\nconsole.log('dovidnuk_table.php?dovid='+dovid+'&butid='+butid);\r\n\t\treturn instance.get('dovidnuk_table.php?dovid='+dovid+'&butid='+butid)},\r\n\r\n\tgetTableData : (dovid, id, login) => {\r\n\t\treturn instance.get('dovidnuk_data.php?dovid='+dovid+'&id='+id+'&userlogin='+login)\r\n\t},\r\n\r\n\tsetUpdateTableRow : (id_dov, dataf, id_row) => { \r\n\t\tinstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\treturn instance.post('dovidnuk_ins_upd.php', {userroles : id_dov, datafields : dataf, id : id_row});\r\n\t},\r\n\r\n\tdeleteRowDovidnuk : (id_dov, id_row) => {\r\n\t\treturn instance.get('dovidnuk_del.php?dovid='+id_dov+'&id='+id_row);\r\n\t},\r\n\r\n\tgetSelectButton : (id_dov, id_but) => {\r\n\t\treturn instance.get('dovidnuk_select_button.php?id_dov='+id_dov+'&id_but='+id_but);\r\n\t},\r\n\r\n\tgetSelectData : (paths, id_dov, id_but, id_row) => {\r\nconsole.log('---------- API ---------');\r\nconsole.log(paths);\r\nconsole.log(id_dov);\r\nconsole.log(id_but);\r\nconsole.log(id_row);\r\nconsole.log(paths+'?data_dov='+id_dov+'&data_but='+id_but+'&data_id='+id_row);\r\nconsole.log('------------------------');\r\n\t\treturn instance.get(paths+'?data_dov='+id_dov+'&data_but='+id_but+'&data_id='+id_row);\r\n\t},\r\n\r\n\tsetSelectData : (id_dov, id_row, dataf, datac, id_but) => {\r\n\t\tconsole.log('API ------');\r\n\t\tconsole.log(datac);\r\n\t\tconsole.log(dataf);\r\n\t\tinstance.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\r\n\t\t\r\n\t\treturn instance.post('dovidnuk_add_ref_data.php', {data_dov : id_dov, data_but : id_but, datafields : dataf, datacombo : datac, data_id : id_row});\r\n\t}\r\n}","import {dovidnukAPI} from './../API/apidovidnuk';\r\n\r\nconst SETDOV = 'set_selected_dovidnuk';\r\nconst SETALLDOV = 'set_all_dovidnuku';\r\nconst SELECTCOND = 'get_selection_condition';\r\nconst DOVBUTTON = 'get_dovidnuk_buttons';\r\nconst USERSELECTCOND = 'user_sected_selection_condition';\r\nconst DOVTABLEHEADER = 'get_table_header';\r\nconst DOVTABLEDATA = 'get_table_data';\r\nconst SELDOVROW = 'set_user_select_row';\r\nconst EDITROW = 'set_user_edit_row';\r\nconst SELBUT = 'set_data_selected_button';\r\nconst CLOSEMODAL = 'close_modal_form';\r\n\r\nlet initialState = {\r\n    selectDov : 0,\r\n    selectDovRow : -1,\r\n    is_view_table : 1,\r\n    dataDovidnuk : [],\r\n    dataSelectionConditions : [],\r\n    selectedDataSelectionConditions : [],\r\n    dovButtons : [],\r\n    tableHeader : [],\r\n    tableData : [],\r\n    tableRowCombo : [],\r\n    refId : 0,\r\n    refBut : 0,\r\n    refCode : -1,\r\n    refType : '',\r\n    refFileResult : '',\r\n    refHeader : [],\r\n    refData : [],\r\n    refCombo : [],\r\n    isModal : 0\r\n}\r\n\r\nconst setDovidnukAction = (code_dov) => ({type : SETDOV, id_dov : code_dov});\r\nconst setDovidnukuAction = (dov) => ({type : SETALLDOV, arrdov : dov});\r\nconst setSelectConditions = (selcond) => ({type : SELECTCOND, selcondarr : selcond});\r\nconst setButtons = (dovbutton) => ({type : DOVBUTTON, butt : dovbutton});\r\nconst setUserSelectConditions = (index, indexdata) => ({type : USERSELECTCOND, dataindex : index, data : indexdata});\r\nconst setTableHeader = (data) => ({type : DOVTABLEHEADER, tableheader : data});\r\nconst setTableData = (data) => ({type : DOVTABLEDATA, tabledatas : data});\r\nconst setSelectRow = (data) => ({type : SELDOVROW, row : data});\r\n//const setUserEditRow = (index, data) => ({type : EDITROW, indexrow : index, datarow : data});\r\nconst setSelectButton = (refbut, refcode, reftype, refheader, refdata, refcombo,refid, ismodal, refresult) =>({type : SELBUT, ref_but : refbut, ref_code : refcode, ref_type : reftype, ref_header : refheader, ref_data : refdata, ref_combo : refcombo, ref_id : refid, is_modal : ismodal, ref_result : refresult})\r\nconst closeModalForm = () => ({type :CLOSEMODAL});\r\n\r\nlet dovidnukReducer = (state = initialState, action) => {\r\n\r\n    switch(action.type){\r\n        case SETDOV :\r\n            return {\r\n                ...state,\r\n                selectDov : action.id_dov\r\n            }\r\n        case SETALLDOV : \r\n            return {\r\n                ...state,\r\n                dataDovidnuk : action.arrdov\r\n            }\r\n        case SELECTCOND :\r\n            return {\r\n                ...state,\r\n                dataSelectionConditions : action.selcondarr,\r\n                selectedDataSelectionConditions : action.selcondarr.map((a) => {return -1})\r\n                }\r\n        case DOVBUTTON : \r\n            return {\r\n                ...state,\r\n                dovButtons : action.butt\r\n            }\r\n        case USERSELECTCOND : \r\n            let d = [];\r\n            for (var i = 0; i< state.selectedDataSelectionConditions.length; i++){\r\n                if (i === action.dataindex) \r\n                    d[i] = action.data\r\n                else d[i] = state.selectedDataSelectionConditions[i]\r\n            }\r\n            return {                    \r\n                ...state,\r\n                selectedDataSelectionConditions : d\r\n            }\r\n        case DOVTABLEHEADER :\r\n            return {\r\n                ...state,\r\n                tableHeader : action.tableheader\r\n            }\r\n        case DOVTABLEDATA : \r\n            return {\r\n                ...state,\r\n                tableData : action.tabledatas['table'],\r\n                tableRowCombo : action.tabledatas['combo']\r\n            }\r\n        case SELDOVROW :\r\n            return {\r\n                ...state,\r\n                selectDovRow : action.row\r\n            }\r\n        case EDITROW : \r\n            return {\r\n                ...state,\r\n                tableData : state.tableData.map((a, index) => { if (index === action.indexrow) {return action.datarow }else {return a}})\r\n                \r\n            }\r\n            case SELBUT :\r\n                return {\r\n                    ...state,\r\n                    refBut : action.ref_but,\r\n                    refId : action.ref_id,\r\n                    refCode : action.ref_code,\r\n                    refType : action.ref_type,\r\n                    refHeader : action.ref_header,\r\n                    refData : action.ref_data,\r\n                    refCombo : action.ref_combo,\r\n                    isModal : action.is_modal,\r\n                    refFileResult : action.ref_result\r\n                }\r\n            case CLOSEMODAL :\r\n                return {\r\n                    ...state,\r\n                    isModal : 0\r\n                }\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport const getDovidnuku = (uid) => (dispatch) => {\r\n    dovidnukAPI.getDovidnuk(uid).then( (response) => {\r\n        dispatch(setDovidnukuAction(response.data))\r\n    })\r\n}\r\n\r\nexport const selectDovidnuk = (id_dov, uid, login) => async (dispatch) => {\r\n    dispatch(setDovidnukAction(id_dov));\r\n    dovidnukAPI.getSelectionConditions(id_dov, uid).then((response) => {\r\n        dispatch(setSelectConditions(response.data));\r\n    })\r\n    dovidnukAPI.getDovButtons(id_dov).then((response) => {\r\n        dispatch(setButtons(response.data));\r\n    })\r\n    let response = await dovidnukAPI.getTableHeader(id_dov, '');\r\n    if (response) {\r\n        dispatch(setTableHeader(response.data));\r\n    }\r\n    let response1 = await dovidnukAPI.getTableData(id_dov, -9, login);\r\n    if (response1) {\r\n        dispatch(setTableData(response1.data));\r\n    }\r\n}\r\n\r\nexport const selectSelectionConditions = (index, indexdata, iddov, login) => async (dispatch) => {\r\n    dispatch(setUserSelectConditions(index, indexdata));\r\n    let response = await dovidnukAPI.getTableData(iddov, indexdata, login);\r\n    if (response) {\r\n        dispatch(setTableData(response.data));\r\n    }\r\n}\r\n\r\nexport const setTable = (indexdata, iddov, login) => async (dispatch) => {\r\n    let response = await dovidnukAPI.getTableHeader(iddov, '');\r\n    if (response) {\r\n        dispatch(setTableHeader(response.data));\r\n    }\r\n    let response1 = await dovidnukAPI.getTableData(iddov, indexdata, login);\r\n    if (response1) {\r\n        dispatch(setTableData(response1.data));\r\n    }\r\n}\r\n\r\nexport const selectRow = (indexrow) => (dispatch) =>{\r\n    dispatch(setSelectRow(indexrow));\r\n}\r\n\r\nexport const setEditRow = (indexrow, datarow, idrow, iddov, d, id_select, userLogin) => async (dispatch) => {\r\n    let response = await dovidnukAPI.setUpdateTableRow(iddov, d, idrow);\r\n    if (response) {\r\n        let response1 = await dovidnukAPI.getTableData(iddov, id_select, userLogin);\r\n        if (response1) {\r\n            dispatch(setTableData(response1.data));\r\n            //dispatch(setUserEditRow(indexrow, datarow));\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteRow =  (id_dov, id_row, login, id_select) => async (dispatch) => {\r\n    let response = await dovidnukAPI.deleteRowDovidnuk(id_dov, id_row);\r\n    if (response) {\r\n        let response1 = await dovidnukAPI.getTableData(id_dov, id_select, login);\r\n        if (response1) {\r\n            dispatch(setTableData(response1.data));\r\n        }\r\n    }\r\n}\r\n\r\nexport const buttonClick = (id_dov, id_but, id_row) => async (dispatch) => {\r\n   let response = await dovidnukAPI.getSelectButton(id_dov, id_but);\r\n    if (response) {\r\n        if (response.data['0'] === 0) {\r\n            dispatch(setSelectButton(id_but,\r\n                                     response.data['0'],\r\n                                     response.data['typedata'],\r\n                                     response.data['fields'],\r\n                                     response.data['fieldsdata'],\r\n                                     [],\r\n                                    id_row,\r\n                                    1,\r\n                                    response.data['textresult']\r\n            ));\r\n        } else\r\n        if (response.data['0'] === 1) {\r\n            dispatch(setSelectButton(id_but,\r\n                                     response.data['0'],\r\n                                     response.data['typedata'],\r\n                                     [],\r\n                                    [],\r\n                                    [],\r\n                                    id_row,\r\n                                    0,\r\n                                    ''\r\n            ));\r\n        } else {\r\n            let response2 = await dovidnukAPI.getTableHeader(id_dov, id_but);\r\n            let response1 = await dovidnukAPI.getSelectData(response.data['text'], id_dov, id_but, id_row);\r\n            if (response1.status === 200 && response2.status === 200) {\r\nconsole.log('-----table------');\r\nconsole.log(response1.data['data']);\r\nconsole.log(response2.data);\r\n\r\n                dispatch(setSelectButton(id_but,\r\n                                        response.data['0'],\r\n                                        response.data['typedata'],\r\n                                        response2.data,\r\n                                        response1.data['data'],\r\n                                        response1.data['combo'],\r\n                                        id_row,\r\n                                        1,\r\n                                        ''\r\n                ));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const closeModalForms = () => (dispatch) => {\r\n    dispatch(closeModalForm());\r\n}\r\n\r\nexport const setRefData = (id_dov, id_but, refdata, refdatacombo, ref_id) => async (dispatch) => {\r\n    let response = await dovidnukAPI.setSelectData(id_dov, ref_id, refdata, refdatacombo, id_but);\r\n    console.log('result insert reff data');\r\n    console.log(response.data);\r\n    if (response.status === 200)\r\n        dispatch(setSelectButton(0, -1, '', [], [], [], 0, 0, ''));\r\n}\r\n\r\nexport default dovidnukReducer;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nlet DovidnukMenu = ({userId, DataDovidnuk, selectDovidnuk, userLogin}) => {\r\n\r\n    let SecMenu = DataDovidnuk.map((a) => {\r\n                                        return (\r\n                                                <NavLink key={a.code_dovid}  className='dovbutton' to = '/Dovidnuk' onClick={ () => {\r\n                                                                                        selectDovidnuk(a.code_dovid, userId, userLogin);\r\n                                                                                        window.sessionStorage.setItem('dovcode', a.code_dovid)}}>\r\n                                                    <span>\r\n                                                        {a.name_dovid}\r\n                                                    </span>\r\n                                                </NavLink>\r\n                                        )})\r\n\r\n    return(\r\n        <div>\r\n            <hr />\r\n            <div className='wraper'>\r\n                <div className='navdiv'>\r\n                    <div className='ribbon'>\r\n                        {SecMenu}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DovidnukMenu;","import React from 'react';\r\n\r\nlet DovidnukSelections = ({dataSelectionConditions, selectedData, selectdov, selectSelectionConditions, userLogin}) => {\r\n\r\n    let DovSel = dataSelectionConditions.map((a, index) => {\r\n            return (\r\n                <div key = 'dovselect'>\r\n                    <label> {a.field_caption} </label>\r\n                    <select key = {index}\r\n                            data-key = {index} \r\n                            className= 'users_select' \r\n                            id={a.table_user_select} \r\n                            value={selectedData[index]} \r\n                            onChange = {(e) => {\r\n                                    selectSelectionConditions(e.target.getAttribute('data-key'), e.target.value, selectdov, userLogin)\r\n                                }}>\r\n                        <option key = '-1' value='-1'></option>\r\n                        {a.data_select.map((b, indexb) => {\r\n                            return ( <option key = {indexb} value={b.field_user_id}>{b.field_user_view}</option> )\r\n                        })}\r\n                    </select>\r\n                </div>\r\n             )})\r\n \r\n    if (dataSelectionConditions.length > 0) {\r\n        return ( <div> {DovSel} </div>) }\r\n        else return null;\r\n}\r\n\r\nexport default DovidnukSelections;","import React from 'react';\r\n\r\nclass TableRow extends React.Component {\r\n    state = {\r\n        selectRow : 0,\r\n        datarow : {}\r\n    }\r\n\r\n    setSelectRow () {\r\n        this.setState({selectRow : 1});\r\n    }\r\n\r\n    setEditValue (i, data){\r\n        let arr = this.state.datarow;\r\n        arr[i] = data;\r\n        this.setState({datarow : arr});\r\n    }\r\n\r\n    saveEditValue (){\r\n//        let d = {};\r\n//        for (var i=0; i< this.props.tableHeader.length; i++){\r\n//            d[i] = [];\r\n//            d[i][0] = this.props.tableHeader[i]['name_table'];\r\n//            if (this.props.tableRowCombo && this.props.tableRowCombo[this.props.tableHeader[i]['name_table']]) {\r\n//                for (var j = 0; j < this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].length; j++) \r\n//                    if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.props.tablerow[this.props.tableHeader[i]['name_table']]){\r\n//                        d[i][1] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n //                   if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.state.datarow[this.props.tableHeader[i]['name_table']])\r\n//                        d[i][2] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n//                }\r\n//            } else {\r\n//                d[i][1] = this.props.tablerow[this.props.tableHeader[i]['name_table']];\r\n//                d[i][2] = this.state.datarow[this.props.tableHeader[i]['name_table']];\r\n//            }\r\n//        }\r\n//        this.props.setEditRow(this.props.index,  this.state.datarow, this.state.datarow['0'], this.props.selectDov, d);\r\n//        this.setState({ selectRow : 0});\r\nlet d = {};\r\nlet id_select = 0;\r\nvar i = 0;\r\nvar ii = 0;\r\nfor (i = 0; i < this.props.dataSelectionConditions.length; i++) {\r\n    if ((this.props.selectDataSelectionConditions[i] !== -1 ) && (this.props.selectDataSelectionConditions[i] !== 'undefined' )){\r\n        d[ii] = [];\r\n        d[ii][0] = this.props.dataSelectionConditions[i]['user_field']; \r\n        d[ii][1] = null; \r\n        for(var j = 0; j < this.props.dataSelectionConditions[i]['data_select'].length; j++){\r\n            if (this.props.dataSelectionConditions[i]['data_select'][j]['field_user_id'] === this.props.selectDataSelectionConditions[i]){\r\n                d[ii][2] = this.props.dataSelectionConditions[i]['data_select'][j]['field_id'];\r\n                id_select = this.props.selectDataSelectionConditions[i];\r\n            }\r\n        }\r\n        d[ii][3] = 'int'; \r\n        ii++;\r\n    }\r\n}\r\n\r\nfor (i=0; i< this.props.tableHeader.length; i++){\r\n    d[ii+i] = [];\r\n    d[ii+i][0] = this.props.tableHeader[i]['name_table'];\r\n    d[ii+i][3] = this.props.tableHeader[i]['type_col'];\r\n    if (this.props.tableRowCombo && this.props.tableRowCombo[this.props.tableHeader[i]['name_table']]) {\r\n        d[ii+i][1] = null;\r\n        d[ii+i][2] = null;\r\n        for (j = 0; j < this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].length; j++) {\r\n            if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.props.tablerow[this.props.tableHeader[i]['name_table']])\r\n                d[ii+i][1] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n            if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.state.datarow[this.props.tableHeader[i]['name_table']])\r\n                d[ii+i][2] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n        }\r\n    } else {\r\n        d[ii+i][1] = this.props.tablerow[this.props.tableHeader[i]['name_table']];\r\n        d[ii+i][2] = this.state.datarow[this.props.tableHeader[i]['name_table']];\r\n    }\r\n}\r\nthis.props.setEditRow(this.props.index,  this.state.datarow, this.state.datarow['0'], this.props.selectDov, d, id_select, this.props.userLogin);\r\nthis.setState({ selectRow : 0});\r\n}\r\n\r\n    unsaveEditValue (){\r\n        let arr = {};\r\n        arr[0] = this.props.tablerow[0];\r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n        }\r\n        this.setState({ datarow : arr, selectRow : 0});\r\n    }\r\n\r\n    deleteEditValue (){\r\n        debugger;\r\n        let id_select = 0;\r\n        var i = 0;\r\n        for (i = 0; i < this.props.dataSelectionConditions.length; i++) {\r\n            if ((this.props.selectDataSelectionConditions[i] !== -1 ) && (this.props.selectDataSelectionConditions[i] !== 'undefined' )){\r\n                for(var j = 0; j < this.props.dataSelectionConditions[i]['data_select'].length; j++){\r\n                    if (this.props.dataSelectionConditions[i]['data_select'][j]['field_user_id'] === this.props.selectDataSelectionConditions[i]){\r\n                        id_select = this.props.selectDataSelectionConditions[i];\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.props.deleteValue(this.props.selectDov, this.props.tablerow[0], this.props.userLogin, id_select);\r\n        this.setState({ selectRow : 0});\r\n    }\r\n\r\n    clickButton (id_but){        \r\n        this.props.clickButton(this.props.selectDov ,id_but, this.props.tablerow[0])\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.unsaveEditValue();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.tablerow !== this.props.tablerow) {\r\n            let arr = {};\r\n            arr[0] = this.props.tablerow[0];\r\n            for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n                arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n            }\r\n            this.setState({datarow : arr})\r\n        }\r\n    }\r\n\r\n    RowCombo (i) {\r\n        let s = '';\r\n        if (this.props.tableRowCombo && this.props.tableRowCombo[this.props.tableHeader[i]['name_table']]) {\r\n//            let val = -1;\r\n//            for (var j = 0; j < this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].length; j++) {\r\n//                if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.state.datarow[this.props.tableHeader[i]['name_table']]) \r\n//                    val = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id']\r\n//            }\r\n                s = <td key = {i}><select className = 'dovinputtable'\r\n//                                        value = {val}\r\n                                        value = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                        data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                        onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.value)}}\r\n                                        >\r\n                                            <option key = {-1} value = {-1}></option>\r\n                                        { this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].map((a)=>{return <option key = {a.id} value = {a.name_col}>{a.name_col}</option>})}\r\n                                </select></td>;\r\n            } else \r\n                if (this.props.tableHeader[i]['type_col'] === 'log') {\r\n                    s = <td key = {i}><input \r\n                                    type = 'checkbox' \r\n                                    data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                    checked = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                    onChange = {(e) => {\r\n                                                        if (e.target.checked)\r\n                                                            this.setEditValue(e.target.getAttribute('data-key'), 1)\r\n                                                        else this.setEditValue(e.target.getAttribute('data-key'), 0)\r\n                                                    }}\r\n                                    /></td>;\r\n                }else\r\n                    s = <td key = {i}><input className = 'dovinputtable'\r\n                                    type = 'text' \r\n                                    value = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                    data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                    onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.value)}}\r\n                                    /></td>;\r\n\r\n        return s;\r\n    }\r\n\r\n    render() {\r\n        let str = []; \r\n        let str1 = []; \r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            if (this.state.selectRow === 1) {\r\n                str[i] = this.RowCombo(i);\r\n            } else \r\n            if (this.props.tableHeader[i]['type_col'] === 'log') {\r\n                    str[i] = <td key = {this.props.tableHeader[i]['name_table']}><input type = 'checkbox' checked = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                    /></td>\r\n            } else \r\n                str[i] = <td key = {this.props.tableHeader[i]['name_table']}>{this.state.datarow[this.props.tableHeader[i]['name_table']]}</td>;\r\n        }\r\n        let clbut = 0;\r\n        for (i=0; i<this.props.dovbutton.length; i++)  { \r\n            if (this.props.dovbutton[i]['in_row'] === 1) {\r\n                clbut++;\r\n                str1[i] = <td key = {this.props.dovbutton[i]['id_button']}> \r\n                            <button value = {this.props.dovbutton[i]['name_button']} \r\n                                    data-key = {this.props.dovbutton[i]['id_button']}\r\n                                    data-id = {this.props.index} \r\n                                    onClick = {(e) =>{ console.log('00000000');this.clickButton(e.target.getAttribute('data-key'), e.target.getAttribute('data-id'))} }\r\n                                    >\r\n                              {this.props.dovbutton[i]['name_button']}\r\n                            </button></td>;\r\n            }\r\n        }\r\n        let but = [];\r\n        but[0] = <tr key = {this.props.index} \r\n                    data-key = {this.props.index}\r\n                    onDoubleClick = {() => { this.setSelectRow()}} >\r\n                    {str}{str1}\r\n                </tr>;\r\n        if (this.state.selectRow === 1) {\r\n            but[1] = <tr key = {this.props.index}><td key = {1} colSpan = {this.props.tableHeader.length + clbut}>\r\n                            <button onClick = {() => {this.saveEditValue()}}>Зберегти зміни</button>\r\n                            <button onClick = {() => {this.unsaveEditValue()}}>Відмінити зміни</button>\r\n                            <button onClick = {() => {this.deleteEditValue()}}>Видалити</button></td></tr>;\r\n        }\r\n\r\n        return <>{but}</>\r\n    }\r\n}\r\n \r\nexport default TableRow;","import React from 'react';\r\n\r\nclass TableAddRow extends React.Component {\r\n    state = {\r\n        selectRow : 0,\r\n        datarow : {}\r\n    }\r\n\r\n    setSelectRow () {\r\n        this.setState({ selectRow : 1});\r\n    }\r\n\r\n    setEditValue (i, data){\r\n        let arr = this.state.datarow;\r\n        arr[i] = data;\r\n        this.setState({datarow : arr});\r\n    }\r\n\r\n    saveEditValue (){\r\n        let d = {};\r\n        let id_select = 0;\r\n        var i = 0;\r\n        var ii = 0;\r\n        for (i = 0; i < this.props.dataSelectionConditions.length; i++) {\r\n            if ((this.props.selectDataSelectionConditions[i] !== -1 ) && (this.props.selectDataSelectionConditions[i] !== 'undefined' )){\r\n                d[ii] = [];\r\n                d[ii][0] = this.props.dataSelectionConditions[i]['user_field']; \r\n                d[ii][1] = null; \r\n                for(var j = 0; j < this.props.dataSelectionConditions[i]['data_select'].length; j++){\r\n                    if (this.props.dataSelectionConditions[i]['data_select'][j]['field_user_id'] === this.props.selectDataSelectionConditions[i]){\r\n                        d[ii][2] = this.props.dataSelectionConditions[i]['data_select'][j]['field_id'];\r\n                        id_select = this.props.selectDataSelectionConditions[i];\r\n                    }\r\n                }\r\n                d[ii][3] = 'int'; \r\n                ii++;\r\n            }\r\n        }\r\n\r\n        for (i=0; i< this.props.tableHeader.length; i++){\r\n            d[ii+i] = [];\r\n            d[ii+i][0] = this.props.tableHeader[i]['name_table'];\r\n            d[ii+i][3] = this.props.tableHeader[i]['type_col'];\r\n            if (this.props.tableRowCombo && this.props.tableRowCombo[this.props.tableHeader[i]['name_table']]) {\r\n                d[ii+i][1] = null;\r\n                d[ii+i][2] = null;\r\n                for (j = 0; j < this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].length; j++) {\r\n                    if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.props.tablerow[this.props.tableHeader[i]['name_table']])\r\n                        d[ii+i][1] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n                    if (this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['name_col'] === this.state.datarow[this.props.tableHeader[i]['name_table']])\r\n                        d[ii+i][2] = this.props.tableRowCombo[this.props.tableHeader[i]['name_table']][j]['id'] ;\r\n                }\r\n            } else {\r\n                d[ii+i][1] = this.props.tablerow[this.props.tableHeader[i]['name_table']];\r\n                d[ii+i][2] = this.state.datarow[this.props.tableHeader[i]['name_table']];\r\n            }\r\n        }\r\n        this.props.setEditRow(this.props.index,  this.state.datarow, this.state.datarow['0'], this.props.selectDov, d, id_select, this.props.userLogin);\r\n        this.setState({ selectRow : 0});\r\n    }\r\n\r\n    unsaveEditValue (){\r\n        let arr = {};\r\n        arr[0] = this.props.tablerow[0];\r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            if ( (this.props.tableHeader[i]['type_col'] === 'log' || this.props.tableHeader[i]['type_col'] === 'int') && this.props.tablerow[this.props.tableHeader[i]['name_table']] === undefined)\r\n                arr[this.props.tableHeader[i]['name_table']] = 0\r\n            else\r\n                arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n        }\r\n        this.setState({ datarow : arr, selectRow : 0});\r\n    }\r\n\r\n    clickButton (id_but){\r\n        this.props.clickButton(this.props.selectDov ,id_but, this.props.tablerow[0])\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.unsaveEditValue();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState){\r\n        if (prevProps.tablerow !== this.props.tablerow) {\r\n            let arr = {};\r\n            arr[0] = this.props.tablerow[0];\r\n            for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n                if ( (this.props.tableHeader[i]['type_col'] === 'log' || this.props.tableHeader[i]['type_col'] === 'int') &&  this.props.tablerow[this.props.tableHeader[i]['name_table']] === undefined)\r\n                    arr[this.props.tableHeader[i]['name_table']] = 0\r\n                else\r\n                    arr[this.props.tableHeader[i]['name_table']] = this.props.tablerow[this.props.tableHeader[i]['name_table']]\r\n            }\r\n            this.setState({datarow : arr})\r\n        }\r\n    }\r\n\r\n    RowCombo (i) {\r\n        let s = '';\r\n        if (this.props.tableRowCombo && this.props.tableRowCombo[this.props.tableHeader[i]['name_table']]) {\r\n                s = <td key = {i}><select className = 'dovinputtable'\r\n                                        value = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                        data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                        onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.value)}}\r\n                                        >\r\n                                            <option key = {-1} value = {-1}></option>\r\n                                        {this.props.tableRowCombo[this.props.tableHeader[i]['name_table']].map((a)=>{return <option  key = {a.id} value = {a.name_col}>{a.name_col}</option>})      }\r\n                                </select></td>;\r\n            } else \r\n                if (this.props.tableHeader[i]['type_col'] === 'log') \r\n                    s = <td key = {i}><input \r\n                                        type = 'checkbox' \r\n                                        data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                        onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.checked)}}\r\n                                        /></td>;\r\n                else\r\n                    s = <td key = {i}><input className = 'dovinputtable'\r\n                                        type = 'text' \r\n                                        value = {this.state.datarow[this.props.tableHeader[i]['name_table']]}\r\n                                        data-key = {this.props.tableHeader[i]['name_table']}                  \r\n                                        onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-key'), e.target.value)}}\r\n                                        /></td>;\r\n        return s;\r\n    }\r\n\r\n    render() {\r\n        let str = []; \r\n        let str1 = []; \r\n        for (var i=0; i<this.props.tableHeader.length; i++)  { \r\n            if (this.state.selectRow === 1) {\r\n                str[i] = this.RowCombo(i);\r\n            } else \r\n                if (this.props.tableHeader[i]['type_col'] === 'log') str[i] = <td key = {this.props.tableHeader[i]['name_table']}><input type = 'checkbox' readonly/></td>\r\n                else str[i] = <td key = {this.props.tableHeader[i]['name_table']}></td>;\r\n        }\r\n        let clbut = 0;\r\n        for (i=0; i<this.props.dovbutton.length; i++)  { \r\n            if (this.props.dovbutton[i]['in_row'] === 1){ \r\n                clbut++;\r\n                str1[i] = <td key = {this.props.dovbutton[i]['id_button']}> </td>;\r\n            }\r\n        }\r\n        let but = [];\r\n        but[0] = <tr key = {this.props.index} \r\n                    data-key = {-1}\r\n                    onDoubleClick = {() => { this.setSelectRow()}} >\r\n                    {str}{str1}\r\n                </tr>;\r\n        if (this.state.selectRow === 1) {\r\n            but[1] = <tr><td colSpan = {this.props.tableHeader.length + clbut}>\r\n                            <button onClick = {() => {this.saveEditValue()}}>Зберегти зміни</button>\r\n                            <button onClick = {() => {this.unsaveEditValue()}}>Відмінити зміни</button></td></tr>;\r\n                        }\r\n\r\n        return <>{but}</>\r\n    }\r\n}\r\n \r\nexport default TableAddRow;","import React from 'react';\r\n\r\nexport default class ModalForm extends React.Component {\r\n\r\n    state = {\r\n        values : [],\r\n        changes : []\r\n    }\r\n\r\n    setValues(index, val){\r\n        let chk = 0;\r\n        if (val === 0) {\r\n            val = 1;\r\n            chk = 1;\r\n        } else {\r\n            val = 0;\r\n        };\r\n\r\n        let arr = [...this.state.values];\r\n        arr[index]['checkes'] = val;\r\n        let arrchange = [...this.state.changes]\r\n        arrchange[index] = chk;\r\n        this.setState({values : arr, changes : arrchange});\r\n    }\r\n\r\n    closeModal(){\r\n        this.props.closeModalForms();\r\n    }\r\n\r\n    setEditValue (j, i, data){\r\n        console.log('----------setEditValue ['+j +']'+i+' = '+data);\r\n        let arr = this.state.values;\r\n        arr[j][i] = data;\r\n        this.setState({values : arr});\r\n    }\r\n\r\n    saveValue(){\r\n        console.log('save value table');\r\n        console.log(this.state.values);\r\n        let j = 0;\r\n        let rd = [];\r\n        let rdata = [];\r\n        for (var i = 0; i < this.state.values.length; i++){\r\n            if (this.state.values[i]['checkes'] === 1) {\r\n                rd[j] = this.state.values[i]['id'];\r\n                j++;\r\n            }\r\n        }\r\n        \r\n        for (var i = 0; i < this.state.values.length; i++){\r\n            if ( this.state.values[i]['checkes'] === 1){\r\n                rdata[i] = [];\r\n                let t = 0;\r\n                for (j = 0; j < this.props.refHeader.length; j++){\r\n                    if (this.props.refHeader[j]['ins'] === 1) {\r\n                        if (this.props.refCombo[this.props.refHeader[j]['name_table']]){\r\n                            for (var k = 0; k < this.props.refCombo[this.props.refHeader[j]['name_table']].length; k++){\r\n                                 if (this.props.refCombo[this.props.refHeader[j]['name_table']][k]['name_col'] === this.state.values[i][this.props.refHeader[j]['name_table']]){\r\n                                    console.log('t = '+ t); \r\n                                    rdata[i][t] = [];\r\n                                    console.log(rdata);\r\n                                   rdata[i][t][0] = this.props.refHeader[j]['name_table'];\r\n                                   rdata[i][t][1] = this.props.refCombo[this.props.refHeader[j]['name_table']][k]['id'];\r\n                                   t++;\r\n                                   // rdata[i][this.props.refHeader[j]['name_table']] = this.props.refCombo[this.props.refHeader[j]['name_table']][k]['id'];\r\n                                }     \r\n                            }\r\n                        } else {\r\n                            console.log('ttt = '+ t);\r\n                            rdata[i][t] = [];\r\n                            console.log(rdata);\r\n                            rdata[i][t][0] = this.props.refHeader[j]['name_table'];\r\n                            rdata[i][t][1] = this.state.values[i][this.props.refHeader[j]['name_table']];\r\n                            t++;\r\n                            //rdata[i][this.props.refHeader[j]['name_table']] = this.state.values[i][this.props.refHeader[j]['name_table']];\r\n                            \r\n                        }\r\n                    }\r\n                }\r\n                \r\n            }\r\n        }\r\n\r\nconsole.log('SAVE RDATA');\r\nconsole.log(rdata);\r\nconsole.log(this.props.selectDov);\r\nconsole.log(this.props.refbut);\r\nconsole.log( this.props.refid);\r\n        this.props.setRefData(this.props.selectDov,this.props.refbut, rd, rdata, this.props.refid);\r\n    }\r\n\r\n    componentDidMount() {\r\n        let arr = [];\r\n        for(var i = 0; i< this.props.refData.length; i++){\r\n            arr[i] = 0;\r\n        }\r\nconsole.log('array for changes');\r\nconsole.log(arr);        \r\n        this.setState({values : this.props.refData, changes : arr});\r\n    }\r\n\r\n    render (){\r\n        console.log('render table');\r\n        console.log(this.state);\r\n        console.log(this.props);\r\n        let str = [];\r\n        let strbt = [];\r\n        let stylecontainer = { width : '500px', height : (this.props.heightForm - 30), overflow : 'scroll'};\r\n        let hdr = this.props.refHeader.map((a,index) => {if (a.name_col !== ''){return <th key = {index}>{a.name_col}</th> } });\r\n        let thr = null;\r\n        let dtr = null;\r\n        if (typeof this.props.refData[0]['checkes'] !== 'undefined'){\r\n            thr = <tr style = {{height : '40px'}} key = {-1}> <th key = {-1}></th> {hdr} </tr>;\r\n        } else {\r\n            thr = <tr key = {-1}> {hdr} </tr>;\r\n        }\r\n        dtr = this.state.values.map((a, index) => {\r\n            let i = 0;\r\n            let dd = [];\r\n            for ( let k in a){\r\n                if (k === 'checkes') {\r\n                    dd[i] = <td key = {i}>  <input type = 'checkbox' name = 'checkvalue' value = {index} checked = {a[k]} onChange = {(e) => {this.setValues(index, a[k])}} /></td>; \r\n                } else  if (k !== 'id') { \r\n                    for(var j = 0; j < this.props.refHeader.length; j++){\r\n                        if (this.props.refHeader[j]['name_table'] === k){\r\n                            if (this.props.refHeader[j]['type_col'] === 'log'){\r\n                                if (this.state.changes[index] === 0){\r\n                                    dd[i] = <td key = {i}> \r\n                                                    <input type = 'checkbox' \r\n                                                                  data-key = {this.props.refHeader[j]['name_table']}                  \r\n                                                                  checked = {a[k]}\r\n                                                    />\r\n                                            </td>;\r\n                                } else {\r\n                                    dd[i] = <td key = {i}>\r\n                                                    <input type = 'checkbox' \r\n                                                                  data-key = {this.props.refHeader[j]['name_table']} \r\n                                                                  data-index = {index}                \r\n                                                                  checked = {a[k]}\r\n                                                                  onChange = {(e) => {console.log('changed id_brigadir');\r\n                                                                  if (e.target.checked)\r\n                                                                      this.setEditValue(e.target.getAttribute('data-index'), e.target.getAttribute('data-key'), 1)\r\n                                                                  else this.setEditValue(e.target.getAttribute('data-index'), e.target.getAttribute('data-key'), 0)\r\n                                                    }} />\r\n                                    </td>;\r\n                                }\r\n                            }else{\r\n                                if (this.state.changes[index] === 0 || this.props.refHeader[j]['ins'] === 0 ) {\r\n                                    dd[i] = <td key = {i}>  {a[k]}  </td>;\r\n                                } else {\r\nconsole.log('++++++++++++++++');\r\nconsole.log(this.props.refHeader[i]['name_table']);\r\nconsole.log(this.props.refCombo[this.props.refHeader[i]['name_table']])                                    \r\n                                    if (this.props.refCombo[this.props.refHeader[j]['name_table']]){\r\n                                        dd[i] = <td key = {i}> \r\n                                                    <select \r\n                                                            value = {a[k]}\r\n                                                            data-key = {this.props.refHeader[j]['name_table']}  \r\n                                                            data-index = {index}                \r\n                                                            onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-index'), e.target.getAttribute('data-key'), e.target.value)}}\r\n                                                    >\r\n                                                        <option key = {-1} value = {-1}></option>\r\n                                                        {this.props.refCombo[this.props.refHeader[j]['name_table']].map((a)=>{return <option key = {a.id} value = {a.name_col}>{a.name_col}</option>})}\r\n                                                    </select>\r\n                                                </td>;\r\n                                    } else {\r\n                                        dd[i] = <td key = {i}> \r\n                                                    <input type = 'text' \r\n                                                            value = {a[k]}\r\n                                                            data-key = {this.props.refHeader[j]['name_table']}  \r\n                                                            data-index = {index}                \r\n                                                            onChange = {(e) => {this.setEditValue(e.target.getAttribute('data-index'), e.target.getAttribute('data-key'), e.target.value)}}\r\n                                                    />\r\n                                                </td>\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                i++;\r\n            }\r\n            return <tr key = {index}> {dd} </tr>;\r\n        });\r\n        str = <table className='TableDespatch'> \r\n                {thr}\r\n                {dtr}\r\n              </table>;\r\n        strbt = <p>\r\n                  <button onClick = {() => {this.saveValue()}}>Зберегти</button>\r\n                  <button onClick = {() => {this.closeModal()}}>Відмінити</button>\r\n                </p>;\r\n        return  <> \r\n                    <div className = \"container\" style = {stylecontainer}>{str}</div>\r\n                    <div>{strbt}</div>\r\n                </>\r\n    }\r\n} ","import React from 'react';\r\n\r\nexport default class ModalPassword extends React.Component {\r\n\r\n    state = {\r\n        values : {}\r\n    }\r\n\r\n     setValues(index, val){\r\n        let arr = {...this.state.values};\r\n        arr[index] = val;\r\n        this.setState({values : arr});\r\n    }\r\n\r\n    closeModal(){\r\n        this.props.closeModalForms();\r\n    }\r\n\r\n    saveValue(){\r\n        console.log('save value password');\r\n        console.log(this.state.values);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({values : this.props.refData});\r\n    }\r\n\r\n    render (){\r\n        let stylecontainer = {};\r\n        let str = [];\r\n        let j = 0;\r\n        stylecontainer = { width : '300px', height : '100px', overflow : 'visible'};\r\n        for (var i in this.state.values){\r\n            str[j] = <p>\r\n                        <label> {this.props.refHeader[i]} </label>\r\n                        <input type='password' data-key = {i} value = {this.state.values[i]} onChange= {(e) => {this.setValues(e.target.getAttribute('data-key'),e.target.value)}} />\r\n                    </p>;\r\n            j++;\r\n        }\r\n        str[j] = <p>\r\n                    <button onClick = {() => {this.saveValue()}}>Зберегти</button>\r\n                    <button onClick = {() => {this.closeModal()}}>Відмінити</button>\r\n                </p>;\r\n        return  <> \r\n                    <div className = \"container\" style = {stylecontainer}>{str}</div>\r\n                </>\r\n                \r\n    }\r\n} ","import React from 'react';\r\nimport ModalTable from '../Modal/modaltable';\r\nimport ModalPassword from '../Modal/modalpassword';\r\n\r\nexport default class ModalForm extends React.Component {\r\n\r\n    state = {\r\n        values : {}\r\n    }\r\n\r\n     setValues(index, val){\r\n        let arr = {...this.state.values};\r\n        arr[index] = val;\r\n        this.setState({values : arr});\r\n    }\r\n\r\n    closeModal(){\r\n        this.props.closeModalForms();\r\n    }\r\n\r\n    saveValue(){\r\n        console.log('save value form');\r\n        console.log(this.state.values);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.refCode === 0) {\r\n            this.setState({values : this.props.refData});\r\n        }\r\n    }\r\n\r\n    render (){\r\n        let stylemodal = {};\r\n        let str = [];\r\n        if (this.props.refCode === 0) {\r\n            stylemodal = { width : '300px', \r\n                height : '100px', \r\n                top: (window.innerHeight / 2 - 50),\r\n                left : (window.innerWidth / 2 -150)\r\n            };\r\n            str = <ModalPassword refHeader = {this.props.refHeader}\r\n                                refData = {this.props.refData}\r\n                                closeModalForms = {this.props.closeModalForms}/>;\r\n        } else\r\n        if (this.props.refCode === 2) {\r\n            let lngdata = this.props.refData.length * 35;\r\n            if ( window.innerHeight <= (lngdata + 150) ) \r\n                lngdata = window.innerHeight - 100;\r\n             else \r\n                lngdata = lngdata + 150;\r\n            stylemodal = { width : '500px', \r\n                        height : lngdata, \r\n                        top: (window.innerHeight / 2 - (lngdata+100)/2),\r\n                        left : (window.innerWidth / 2 -250)\r\n            };\r\n            str = <ModalTable refid = {this.props.refId}\r\n                              refHeader = {this.props.refHeader}\r\n                              refData = {this.props.refData}\r\n                              refCombo = {this.props.refCombo}\r\n                              closeModalForms = {this.props.closeModalForms} \r\n                              heightForm = {lngdata} \r\n                              refbut = {this.props.refBut} \r\n                              setRefData = {this.props.setRefData} \r\n                              selectDov = {this.props.selectDov} />;\r\n        }\r\n        return  <> <div id=\"modal_form\" style = {stylemodal}>\r\n                        <div style = {{height : '10px'}}><span id=\"modal_close\" onClick = {()=>{this.closeModal()}}>X</span></div>\r\n                        {str}\r\n                    </div>\r\n                    <div id=\"overlay\"></div>\r\n                </>\r\n                \r\n    }\r\n} ","import React from 'react';\r\nimport TableRow from './tablebody';\r\nimport TableAddRow from './tableaddrow';\r\nimport ModalForm from './../Modal/modalform';\r\n\r\n\r\nlet Tables = ({dataSelectionConditions, selectedDataSelectionConditions, tableHeader, tableData, tableRowCombo, selectdov, selectdovrow, dovButtons, selectRow, setEditRow, clickButton, deleteRow, isModal, refId, refCode, refType, \r\n                refFileResult, refHeader, refData, refCombo, closeModalForms, refBut, setRefData, userLogin}) => {\r\n\r\n    let TableHeaderButton = dovButtons.map((a, index) => { if (a.in_row) return <th key = {'b'+index}></th>});\r\n\r\n    let TableHeader = tableHeader.map((a, index) => {\r\n        return <th key = {index}>{a.name_col}</th>\r\n    });\r\n\r\n    let TableBody = tableData.map((a, index) => { \r\n        return <TableRow tableHeader={tableHeader} \r\n                         tableRowCombo={tableRowCombo}\r\n                         dovbutton={dovButtons}\r\n                         tablerow={a} \r\n                         index={index} \r\n                         selectdovrow={selectdovrow} \r\n                         selectRow={selectRow} \r\n                         selectDov={selectdov}\r\n                         dataSelectionConditions={dataSelectionConditions}\r\n                         selectDataSelectionConditions={selectedDataSelectionConditions}\r\n                         setEditRow={setEditRow} \r\n                         clickButton={clickButton}\r\n                         deleteValue={deleteRow}\r\n                         userLogin={userLogin}\r\n                         isModal={isModal}\r\n                         refId={refId}\r\n                         refCode={refCode}\r\n                         refType={refType}\r\n                         refFileResult={refFileResult}\r\n                         refHeader={refHeader}\r\n                         refData={refData}\r\n                         />;        \r\n    });\r\n\r\n    let T = () => {\r\n        if ( tableHeader.length > 0 ){\r\n            return <table className='TableDespatch'>  \r\n                    <tbody>\r\n                        <tr key = '-2'> \r\n                            {TableHeader}\r\n                            {TableHeaderButton} \r\n                        </tr>\r\n                        <TableAddRow tableHeader = {tableHeader} \r\n                                    tableRowCombo = {tableRowCombo}\r\n                                    dovbutton = {dovButtons}\r\n                                    tablerow = {[]} \r\n                                    index = {-1} \r\n                                    dataSelectionConditions={dataSelectionConditions}\r\n                                    selectDataSelectionConditions={selectedDataSelectionConditions}\r\n                                    selectdovrow = {selectdovrow} \r\n                                    selectRow = {selectRow} \r\n                                    selectDov = {selectdov}\r\n                                    setEditRow = {setEditRow} \r\n                                    clickButton = {clickButton}\r\n                                    deleteValue = {deleteRow}\r\n                                    userLogin = {userLogin}\r\n                         />\r\n                        {TableBody}\r\n                    </tbody>\r\n                </table>\r\n\r\n    } else {\r\n            return '';\r\n        }\r\n    }\r\n    let DB = dovButtons.map((a, index) => {\r\n        if (!a.in_row) return <button key = {index} value = {a.id_dovidnuk}>{a.name_button}</button>\r\n        return null;\r\n    });\r\n\r\n    let ModalForms = () => { \r\n        if (isModal === 1) {\r\n            return <ModalForm refId = {refId}\r\n                            refBut = {refBut}\r\n                            refCode = {refCode}\r\n                            refType = {refType}\r\n                            refFileResult = {refFileResult}\r\n                            refHeader = {refHeader}\r\n                            refData = {refData}\r\n                            refCombo = {refCombo}\r\n                            closeModalForms = {closeModalForms}\r\n                            setRefData = {setRefData}\r\n                            selectDov = {selectdov}\r\n            />\r\n        }\r\n    }\r\n                \r\n    return(\r\n        <div>\r\n           {DB}\r\n           {T()}\r\n           {ModalForms()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tables;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {buttonClick, selectDovidnuk, getDovidnuku, selectSelectionConditions, setTable, selectRow, setEditRow, deleteRow, closeModalForms, setRefData} from './../../Redux/dovidnukreducer';\r\nimport DovidnukMenu from './dovidnukmenu';\r\nimport DovidnukSelections from './dovidnukselections';\r\nimport Tables from './tables';\r\n\r\nclass DovidnukContainer extends React.Component{\r\n    componentDidMount (){\r\n        this.props.getDovidnuku(this.props.userId);\r\n        let dov_id = window.sessionStorage.getItem('dovcode');\r\n        if (dov_id) this.props.selectDovidnuk(dov_id, this.props.userId, this.props.userLogin)\r\n    }\r\n     \r\n    render(){ \r\n        return <div>\r\n                <DovidnukMenu   userId = {this.props.userId} \r\n                                userLogin = {this.props.userLogin}\r\n                                DataDovidnuk = {this.props.dovidnuk.dataDovidnuk} \r\n                                selectDovidnuk = {this.props.selectDovidnuk} />\r\n                <DovidnukSelections dataSelectionConditions = {this.props.dovidnuk.dataSelectionConditions} \r\n                                    selectedData = {this.props.dovidnuk.selectedDataSelectionConditions}\r\n                                    selectdov = {this.props.dovidnuk.selectDov}\r\n                                    userLogin = {this.props.userLogin}\r\n                                    selectSelectionConditions = {this.props.selectSelectionConditions} />\r\n                <Tables tableHeader = {this.props.dovidnuk.tableHeader}\r\n                        tableData = {this.props.dovidnuk.tableData} \r\n                        tableRowCombo = {this.props.dovidnuk.tableRowCombo}\r\n                        selectdov = {this.props.dovidnuk.selectDov}\r\n                        selectdovrow = {this.props.dovidnuk.selectDovRow}\r\n                        dataSelectionConditions = {this.props.dovidnuk.dataSelectionConditions}\r\n                        selectedDataSelectionConditions = {this.props.dovidnuk.selectedDataSelectionConditions}\r\n                        dovButtons = {this.props.dovidnuk.dovButtons}\r\n                        isModal = {this.props.dovidnuk.isModal}\r\n                        refId = {this.props.dovidnuk.refId}\r\n                        refCode = {this.props.dovidnuk.refCode}\r\n                        refType = {this.props.dovidnuk.refType}\r\n                        refFileResult = {this.props.dovidnuk.refFileResult}\r\n                        refHeader = {this.props.dovidnuk.refHeader}\r\n                        refData = {this.props.dovidnuk.refData}\r\n                        refCombo = {this.props.dovidnuk.refCombo}\r\n                        refBut = {this.props.dovidnuk.refBut}\r\n                        selectRow = {this.props.selectRow} \r\n                        setEditRow = {this.props.setEditRow} \r\n                        clickButton = {this.props.buttonClick}\r\n                        deleteRow = {this.props.deleteRow}\r\n                        userLogin = {this.props.userLogin}\r\n                        closeModalForms = {this.props.closeModalForms}\r\n                        setRefData = {this.props.setRefData}\r\n                        />      \r\n            </div>\r\n    }\r\n} \r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dovidnuk : state.dovidnuk,\r\n        userId : state.loguser.userId,\r\n        userLogin : state.loguser.userLogin\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {buttonClick, selectDovidnuk, getDovidnuku, selectSelectionConditions, setTable, selectRow, setEditRow, deleteRow, \r\n                                         closeModalForms, setRefData})(DovidnukContainer);\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {BrowserRouter, Route} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {setDisconect} from './../../Redux/loguserreducer';\r\nimport MainMenus from './mainmenu';\r\nimport DovidnukContainer from './../DataDovidnuk/dovidnukcontainer';\r\n\r\n\r\nclass MainContainer extends React.Component {\r\n    render() {\r\n        if (this.props.userId === 0) {\r\n            return null;\r\n        } else { \r\n            return  <BrowserRouter>\r\n                        <MainMenus userId = {this.props.userId} selectMainMenu = {this.props.selectMainMenu} DisconectingUser = {this.props.setDisconect}/>\r\n                        <Route exact path='/' />\r\n                        <Route path='/Dovidnuk' render={() => <DovidnukContainer {...this.props} />} />\r\n                        \r\n                    </BrowserRouter>\r\n        }\r\n    }\r\n};\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId : state.loguser.userId, \r\n        selectMainMenu : state.loguser.selectMainMenu,\r\n        userSelectMenu : state.loguser.userSelectMenu\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {setDisconect})(MainContainer);","import React from 'react';\r\nimport LoginContainer from './Component/Login/logincontainer';\r\nimport MainContainer from './Component/MainBody/maincontainer';\r\nimport {connect} from 'react-redux';\r\nimport {setConnect} from './Redux/loguserreducer';\r\n\r\nconst App = class extends  React.Component {\r\n    componentDidMount() {\r\n        let log = window.sessionStorage.getItem('login');\r\n        let pass = window.sessionStorage.getItem('password');\r\n        if (log  && pass) this.props.setConnect(log, pass);\r\n    };\r\n\r\n    render(){    \r\n        if (this.props.userId === 0) {\r\n            return <div>\r\n                < LoginContainer />\r\n            </div>\r\n        } else {\r\n            return <div>\r\n                <MainContainer />\r\n            </div>\r\n        }\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        userId : state.loguser.userId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setConnect})(App);","const LOGIN = 'login';\r\nconst LOGOUT = 'logout';\r\n\r\nlet initialState = {\r\n\r\n    SelectMainMenu : [\r\n          {name_dovid :'Адміністрування', code_dov:\"1\"}, \r\n          {name_dovid :'Табелювання', code_dov:\"2\"},\r\n          {name_dovid :'Довідник', code_dov:\"3\"}\r\n    ]\r\n}\r\n\r\nexport const setLoginAction = (log, pas) => ({type : LOGIN, logname : log, password: pas})\r\nexport const setLogoutAction = () => ({type : LOGOUT})\r\n\r\nlet mainReducer = (state = initialState, action)  => {\r\n    switch(action.type){\r\n        case LOGIN :\r\n            state.userLogin = action.logname;\r\n            state.userPassword = action.password; \r\n            state.paths = '/main';\r\n            return state;\r\n        case LOGOUT :\r\n                state.userLogin = '';\r\n                state.userPassword = ''; \r\n                state.paths = '/';\r\n                return state;\r\n        default : return state;\r\n    }\r\n}\r\n\r\nexport default mainReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport logUserReducer from './loguserreducer';\r\nimport dovidnukReducer from './dovidnukreducer';\r\nimport mainReducer from './mainreducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form';\r\n\r\nlet reducers = combineReducers({loguser:logUserReducer, main:mainReducer, dovidnuk:dovidnukReducer, form:formReducer});\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nexport default store;","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './Redux/reduxstore';\n\nlet AppMain = () => {\n    return <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </ Provider>\n        </ BrowserRouter>\n};\n\nexport default AppMain;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppMain from './appmain';\n\nReactDOM.render( < AppMain />, document.getElementById('root'));\n"],"sourceRoot":""}